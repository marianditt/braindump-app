{"version":3,"sources":["hooks/navigation-hook.ts","services/dump-service.ts","store/dump-store-types.ts","store/dump-store-actions.ts","store/dump-store.ts","store/store.ts","validators/string-validators.ts","hooks/shortcut-hooks.ts","components/dump-details-content.tsx","components/dump-details.tsx","components/input/parentheses-enhancer.ts","components/input/advanced-input.tsx","components/dump-editor.tsx","services/create-service.ts","components/floating-button.tsx","components/header/action-button.tsx","components/header/app-bar.tsx","components/pages/page-content.tsx","components/pages/editor-base-page.tsx","components/pages/dump-creator-page.tsx","services/search-service.ts","hooks/dump-selector-hooks.ts","components/pages/dump-details-page.tsx","components/pages/dump-editor-page.tsx","hooks/editor-hook.ts","services/import-export-service.ts","components/dump-search-filter.tsx","components/dump-search-results.tsx","components/header/menu-button.tsx","components/pages/dump-search-page.tsx","App.tsx","global-styles.ts","index.tsx","reportWebVitals.ts"],"names":["useNavigation","history","useHistory","navigateTo","useCallback","route","location","pathname","push","replace","navigateHome","navigateToDetails","dump","id","navigateToCreate","navigateToEdit","DumpActionType","LocalStorageKey","postDumps","dumps","data","JSON","stringify","window","localStorage","setItem","mergeDumps","mergeDumpsAction","type","MergeDumps","dispatch","getState","removeDump","dispatchDumpAction","RemoveDump","dumpAction","initialState","getItem","parse","error","findAllDumps","resolveMergeConflict","left","right","resolveSummaryMergeConflict","summary","mergedSummary","hasSummaryConflict","resolveDescriptionMergeConflict","description","mergedDescription","hasDescriptionConflict","prefix","tags","Map","forEach","tag","set","Array","from","keys","timestamp","Math","min","store","createStore","combineReducers","state","action","merge","get","values","addDumpAction","updateDumpAction","index","findIndex","d","newState","removeDumpAction","filter","dumpListAction","AddDump","UpdateDump","applyMiddleware","thunk","useAppSelector","useSelector","useAppDispatch","useDispatch","isEmpty","value","trim","length","useCancelShortcut","callback","useKeyListener","event","key","matches","onKeyDown","preventDefault","useEffect","document","addEventListener","removeEventListener","DumpDetailsContent","withTheme","styled","props","className","content","theme","typography","h4","h5","h6","spacing","DumpDetails","Card","CardContent","Typography","variant","pairs","map","createPairs","invPairs","invMap","invertPairs","split","start","end","slice","AdvancedInput","ref","useRef","useState","unpack","setState","onChange","current","setSelectionRange","direction","TextField","inputRef","label","oldState","target","enhancers","reduce","prevState","matcher","stopPropagation","helperText","multiline","selectionStart","selectionEnd","selectionDirection","defaultProps","pairAtCursor","suffix","ch","selection","DumpEditor","onFieldChange","field","hasError","uuid4","Date","now","createDump","noValidate","autoComplete","onSubmit","FloatingButton","FloatingButtonComponent","Fab","color","onClick","Add","ActionButton","ActionButtonComponent","IconButton","disabled","edge","Search","ArrowBack","Close","Delete","Edit","Save","selectIcon","AppBar","position","Toolbar","primaryButton","title","secondaryButton","PageContent","PageContentComponent","Container","maxWidth","children","EditorBase","navigation","useEditorState","selectedDump","editorState","onSave","saveDisabled","changedDump","ctrlKey","DumpCreatorPage","addDump","createSearchHash","Object","toLowerCase","flatMap","useDumpByIdSelector","dumpId","find","DumpDetailsPage","routeParams","useDumpParam","onEdit","DumpEditorPage","updateDump","validate","oldDump","newDump","validSummary","validDescription","summaryChanged","descriptionChanged","useParams","importState","file","a","Promise","resolve","_importDumps","reader","FileReader","onload","fileData","ArrayBuffer","TextDecoder","decode","_decodeData","result","jsonData","readAsText","DumpSearchFilter","focus","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","autoFocus","DumpSearchResults","listItems","ListItem","button","onDumpSelection","ListItemText","primary","secondary","toLocaleString","ListItemSecondaryAction","onDumpRemoval","List","MenuButton","anchor","setAnchor","onMenuClose","menuItems","actions","menuAction","MenuItem","onAction","currentTarget","Menu","anchorEl","keepMounted","open","onClose","DumpSearchPage","selected","useDumpByFilterSelector","inputFile","onFileChoice","files","menuActions","blob","Blob","url","URL","createObjectURL","link","createElement","download","href","click","exportState","accept","style","display","App","basename","process","path","globalState","scores","searchableDump","searchableFilter","keywords","searchableContent","join","kw","includes","scoreSearchResult","scoreDump","maxScore","max","score","filterDumps","element","onPerfEntry","GlobalStyle","createGlobalStyle","ReactDOM","render","CssBaseline","StylesProvider","injectFirst","getElementById","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.b3e1e0bc.chunk.js","sourcesContent":["import { useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Dump } from '../types/dump-types'\n\nexport interface DumpRouteParam {\n  dumpId: string\n}\n\nexport interface Navigation {\n  navigateHome: () => void\n  navigateToDetails: (dump: Dump) => void\n  navigateToEdit: (dump: Dump) => void\n  navigateToCreate: () => void\n}\n\nexport function useNavigation(): Navigation {\n  const history = useHistory<string>()\n\n  const navigateTo = useCallback(\n    (route: string): void => {\n      const isHome = history.location.pathname === '/'\n      if (isHome) {\n        history.push(route)\n      } else {\n        history.replace(route)\n      }\n    },\n    [history]\n  )\n\n  const navigateHome = useCallback((): void => {\n    navigateTo('/')\n  }, [navigateTo])\n\n  const navigateToDetails = useCallback(\n    (dump: Dump): void => {\n      navigateTo(`/show/dumps/${dump.id}`)\n    },\n    [navigateTo]\n  )\n\n  const navigateToCreate = useCallback((): void => {\n    navigateTo('/create')\n  }, [navigateTo])\n\n  const navigateToEdit = useCallback(\n    (dump: Dump): void => {\n      navigateTo(`/edit/dumps/${dump.id}`)\n    },\n    [navigateTo]\n  )\n\n  return {\n    navigateHome,\n    navigateToDetails,\n    navigateToCreate,\n    navigateToEdit,\n  }\n}\n","import { Dump } from '../types/dump-types'\n\nconst LocalStorageKey = {\n  Dumps: 'dumps',\n}\n\nexport function findAllDumps(): Dump[] {\n  const data: string | null = window.localStorage.getItem(LocalStorageKey.Dumps)\n  if (data === null) {\n    return []\n  }\n\n  try {\n    return JSON.parse(data).dumps\n  } catch (error) {\n    return []\n  }\n}\n\nexport function postDumps(dumps: Dump[]): void {\n  const data = JSON.stringify(dumps)\n  window.localStorage.setItem(LocalStorageKey.Dumps, data)\n}\n","import { Action } from '@reduxjs/toolkit'\nimport { Dump } from '../types/dump-types'\n\nexport type GetState<T> = () => T\n\nexport interface DumpListAction extends Action {\n  type: DumpActionType\n  dumps: Dump[]\n}\n\nexport interface DumpAction extends Action {\n  type: DumpActionType\n  dump: Dump\n}\n\nexport enum DumpActionType {\n  MergeDumps = 'MergeDumps',\n  AddDump = 'AddDump',\n  UpdateDump = 'UpdateDump',\n  RemoveDump = 'RemoveDump',\n}\n","import { Action, Dispatch } from '@reduxjs/toolkit'\nimport { postDumps } from '../services/dump-service'\nimport { Dump } from '../types/dump-types'\nimport { DumpAction, DumpActionType, DumpListAction, GetState } from './dump-store-types'\n\nexport function mergeDumps(dumps: Dump[]): any {\n  const mergeDumpsAction: DumpListAction = {\n    type: DumpActionType.MergeDumps,\n    dumps: dumps,\n  }\n\n  return (dispatch: Dispatch<Action>, getState: GetState<Dump[]>): void => {\n    dispatch(mergeDumpsAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nexport function addDump(dump: Dump): any {\n  return dispatchDumpAction(DumpActionType.AddDump, dump)\n}\n\nexport function updateDump(dump: Dump): any {\n  return dispatchDumpAction(DumpActionType.UpdateDump, dump)\n}\n\nexport function removeDump(dump: Dump): any {\n  return dispatchDumpAction(DumpActionType.RemoveDump, dump)\n}\n\nfunction dispatchDumpAction(type: DumpActionType, dump: Dump): any {\n  const dumpAction: DumpAction = {\n    type,\n    dump,\n  }\n\n  return (dispatch: Dispatch<Action>, getState: GetState<Dump[]>): void => {\n    dispatch(dumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n","import { Action } from '@reduxjs/toolkit'\nimport { findAllDumps } from '../services/dump-service'\nimport { Dump } from '../types/dump-types'\nimport { DumpAction, DumpActionType, DumpListAction } from './dump-store-types'\n\nconst initialState = findAllDumps()\n\nexport function dumpReducer(state: Dump[] = initialState, action: Action): Dump[] {\n  function mergeDumpsAction(dumps: Dump[]): Dump[] {\n    const merge = new Map<string, Dump>()\n    state.forEach((dump) => merge.set(dump.id, dump))\n    dumps.forEach((dump) => merge.set(dump.id, resolveMergeConflict(merge.get(dump.id) || null, dump)))\n    return Array.from(merge.values())\n  }\n\n  function addDumpAction(state: Dump[], dump: Dump): Dump[] {\n    return [...state, dump]\n  }\n\n  function updateDumpAction(state: Dump[], dump: Dump): Dump[] {\n    const index = state.findIndex((d: Dump) => d.id === dump.id)\n    if (index < 0) {\n      return state\n    }\n\n    const newState = [...state]\n    newState[index] = dump\n    return newState\n  }\n\n  function removeDumpAction(state: Dump[], dump: Dump): Dump[] {\n    return state.filter((d: Dump) => d.id !== dump.id)\n  }\n\n  switch (action.type) {\n    case DumpActionType.MergeDumps: {\n      const dumpListAction = action as DumpListAction\n      return mergeDumpsAction(dumpListAction.dumps)\n    }\n    case DumpActionType.AddDump: {\n      const dumpAction = action as DumpAction\n      return addDumpAction(state, dumpAction.dump)\n    }\n    case DumpActionType.UpdateDump: {\n      const dumpAction = action as DumpAction\n      return updateDumpAction(state, dumpAction.dump)\n    }\n    case DumpActionType.RemoveDump:\n      const dumpAction = action as DumpAction\n      return removeDumpAction(state, dumpAction.dump)\n  }\n  return state\n}\n\nfunction resolveMergeConflict(left: Dump | null, right: Dump): Dump {\n  if (left === null) {\n    return right\n  }\n\n  const [mergedSummary, hasSummaryConflict] = resolveSummaryMergeConflict(left.summary, right.summary)\n  const [mergedDescription, hasDescriptionConflict] = resolveDescriptionMergeConflict(\n    left.description,\n    right.description\n  )\n  const prefix = hasSummaryConflict || hasDescriptionConflict ? 'CONFLICT: ' : ''\n\n  const tags = new Map<string, boolean>()\n  left.tags.forEach((tag) => tags.set(tag, true))\n  right.tags.forEach((tag) => tags.set(tag, true))\n\n  return {\n    id: left.id,\n    summary: prefix + mergedSummary,\n    description: mergedDescription,\n    tags: Array.from(tags.keys()),\n    timestamp: Math.min(left.timestamp, right.timestamp),\n  }\n}\n\nfunction resolveSummaryMergeConflict(left: string, right: string): [string, boolean] {\n  if (left === right) {\n    return [left, false]\n  } else {\n    return [`${left} --- ${right}`, true]\n  }\n}\n\nfunction resolveDescriptionMergeConflict(left: string, right: string): [string, boolean] {\n  if (left === right) {\n    return [left, false]\n  } else {\n    return [`${left}\\n\\n---\\n\\n${right}`, true]\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { dumpReducer } from './dump-store'\n\nexport const store = createStore(\n  combineReducers({\n    dumps: dumpReducer,\n  }),\n  applyMiddleware(thunk)\n)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n","export function isEmpty(value: string): boolean {\n  return value.trim().length === 0\n}\n","import { useEffect } from 'react'\n\nexport function useEditShortcut(callback: () => void): void {\n  useKeyListener(isEditEvent, callback)\n\n  function isEditEvent(event: KeyboardEvent): boolean {\n    return event.key === 'e'\n  }\n}\n\nexport function useCancelShortcut(callback: () => void): void {\n  useKeyListener(isCancelEvent, callback)\n\n  function isCancelEvent(event: KeyboardEvent): boolean {\n    return event.key === 'Escape'\n  }\n}\n\nexport function useSaveShortcut(callback: () => void): void {\n  useKeyListener(isSaveEvent, callback)\n\n  function isSaveEvent(event: KeyboardEvent): boolean {\n    return event.ctrlKey && event.key === 's'\n  }\n}\n\nfunction useKeyListener(matches: (event: KeyboardEvent) => boolean, callback: () => void): void {\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown)\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n    }\n  })\n\n  function onKeyDown(event: KeyboardEvent): void {\n    if (matches(event)) {\n      callback()\n      event.preventDefault()\n    }\n  }\n}\n","import { Theme, withTheme } from '@material-ui/core'\nimport React from 'react'\nimport Markdown from 'react-markdown'\nimport styled, { ThemeProps } from 'styled-components'\n\nexport const DumpDetailsContent = withTheme(styled(DumpDetailsContentComponent)`\n  ${(props: ThemeProps<any>) => props.theme.typography};\n\n  h1 {\n    ${(props) => props.theme.typography.h4};\n  }\n\n  h2 {\n    ${(props: ThemeProps<any>) => props.theme.typography.h5};\n  }\n\n  h3,\n  h4,\n  h5,\n  h6 {\n    ${(props: ThemeProps<any>) => props.theme.typography.h6};\n  }\n\n  img {\n    max-width: 100%;\n    max-height: 50vh;\n  }\n\n  *:not(pre) > code,\n  pre {\n    border: solid thin #d3d3d3;\n    border-radius: 5px;\n    background-color: #efefef;\n  }\n\n  *:not(pre) > code {\n    padding: 3px;\n  }\n\n  pre {\n    padding: ${(props: ThemeProps<Theme>) => props.theme.spacing(1, 1, 1, 1)};\n  }\n`)\n\ninterface DumpDetailsContentProps {\n  className: string\n  content: string\n}\n\nfunction DumpDetailsContentComponent(props: DumpDetailsContentProps): JSX.Element {\n  return <Markdown className={props.className}>{props.content}</Markdown>\n}\n","import { Card, CardContent, Theme, Typography, withTheme } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { ThemeProps } from 'styled-components'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport { DumpDetailsContent } from './dump-details-content'\n\nexport const DumpDetails = withTheme(styled(DumpDetailsComponent)`\n  margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n`)\n\ninterface DumpDetailsProps {\n  className: string\n  dump: Dump\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  dump: PropTypes.shape(dumpShape).isRequired,\n}\n\nfunction DumpDetailsComponent(props: DumpDetailsProps): JSX.Element {\n  return (\n    <Card className={props.className}>\n      <CardContent>\n        <Typography variant=\"h6\">{props.dump.summary}</Typography>\n        <DumpDetailsContent content={props.dump.description} />\n      </CardContent>\n    </Card>\n  )\n}\n\nDumpDetailsComponent.propTypes = propTypes\n","import { InputState } from './advanced-input-types'\n\nconst pairs = createPairs()\nconst invPairs = invertPairs(pairs)\n\nfunction createPairs(): Map<string, string> {\n  const map = new Map<string, string>()\n  map.set('(', ')')\n  map.set('[', ']')\n  map.set('{', '}')\n  map.set('<', '>')\n  map.set('\"', '\"')\n  map.set(\"'\", \"'\")\n  return map\n}\n\nfunction invertPairs(map: Map<string, string>): Map<string, string> {\n  const invMap = new Map<string, string>()\n  map.forEach((value, key) => invMap.set(value, key))\n  return invMap\n}\n\nexport function openParentheses(key: string, state: InputState): InputState | null {\n  const value = pairs.get(key) || null\n  if (value === null) {\n    return null\n  }\n\n  const [prefix, selection, suffix] = split(state.value, state.start, state.end)\n  return {\n    value: prefix + key + selection + value + suffix,\n    start: prefix.length + 1,\n    end: prefix.length + 1 + selection.length,\n    direction: state.direction,\n  }\n}\n\nexport function closeParentheses(key: string, state: InputState): InputState | null {\n  const ch = state.value[state.start]\n  if (key !== ch || state.start !== state.end) {\n    return null\n  }\n\n  const isClosing = !!invPairs.get(ch)\n  if (!isClosing) {\n    return null\n  }\n\n  return {\n    value: state.value,\n    start: state.start + 1,\n    end: state.end + 1,\n    direction: state.direction,\n  }\n}\n\nexport function removeParentheses(key: string, state: InputState): InputState | null {\n  if (key !== 'Backspace' || state.start !== state.end) {\n    return null\n  }\n\n  const [prefix, pairAtCursor, suffix] = split(state.value, state.start - 1, state.start + 1)\n  const isPair = !!pairs.get(pairAtCursor[0]) && !!invPairs.get(pairAtCursor[1])\n  if (!isPair) {\n    return null\n  }\n\n  return {\n    value: prefix + suffix,\n    start: prefix.length,\n    end: prefix.length,\n    direction: state.direction,\n  }\n}\n\nfunction split(value: string, start: number, end: number): [string, string, string] {\n  return [value.slice(0, start), value.slice(start, end), value.slice(end)]\n}\n","import { TextField } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { ChangeEvent, KeyboardEvent, useEffect, useRef, useState } from 'react'\nimport { InputEnhancer, InputState } from './advanced-input-types'\nimport { closeParentheses, openParentheses, removeParentheses } from './parentheses-enhancer'\n\ninterface AdvancedInputProps {\n  label: string\n  value: string\n  onChange: (value: string) => void\n  error: string | null\n  multiline: boolean\n  enhancers: InputEnhancer[]\n}\n\nconst propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  multiline: PropTypes.bool.isRequired,\n  enhancers: PropTypes.arrayOf(PropTypes.func.isRequired).isRequired,\n}\n\nexport function AdvancedInput(props: AdvancedInputProps): JSX.Element {\n  const ref = useRef<HTMLInputElement>()\n  const [state, setState]: [InputState, React.Dispatch<React.SetStateAction<InputState>>] = useState(\n    unpack({ value: props.value })\n  )\n\n  useEffect(() => {\n    ref.current?.setSelectionRange(state.start, state.end, state.direction)\n  }, [state])\n\n  function onKeyDown(event: KeyboardEvent<HTMLInputElement>): void {\n    const oldState = unpack(event.target)\n    const newState = props.enhancers.reduce(\n      (prevState: InputState | null, matcher: InputEnhancer) => prevState || matcher(event.key, oldState),\n      null\n    )\n\n    if (newState !== null) {\n      onChange(newState)\n      event.stopPropagation()\n      event.preventDefault()\n    }\n  }\n\n  function onChange(newState: InputState): void {\n    setState(newState)\n    props.onChange(newState.value)\n  }\n\n  return (\n    <TextField\n      inputRef={ref}\n      label={props.label}\n      value={state.value}\n      onKeyDown={onKeyDown}\n      onChange={(event: ChangeEvent<HTMLInputElement>) => onChange(unpack(event.target))}\n      error={!!props.error}\n      helperText={props.error || ''}\n      variant=\"outlined\"\n      multiline={props.multiline}\n    />\n  )\n}\n\nfunction unpack({ value, selectionStart, selectionEnd, selectionDirection }: any): InputState {\n  return {\n    value: value || '',\n    start: selectionStart || 0,\n    end: selectionEnd || 0,\n    direction: selectionDirection || 'none',\n  }\n}\n\nAdvancedInput.propTypes = propTypes\n\nAdvancedInput.defaultProps = {\n  label: '',\n  value: '',\n  onChange: () => {},\n  error: null,\n  multiline: false,\n  enhancers: [removeParentheses, closeParentheses, openParentheses],\n}\n","import { Theme, withTheme } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { FormEvent, useEffect, useState } from 'react'\nimport styled, { ThemeProps } from 'styled-components'\nimport { createDump } from '../services/create-service'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport { isEmpty } from '../validators/string-validators'\nimport { AdvancedInput } from './input/advanced-input'\n\nexport const DumpEditor = withTheme(styled(DumpEditorComponent)`\n  div {\n    width: 100%;\n  }\n\n  > div {\n    margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n  }\n\n  > div > div > div > TextArea {\n    font-family: monospace;\n  }\n`)\n\ninterface DumpEditorProps {\n  className: string\n  dump?: Dump\n  onChange: (dump: Dump) => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  dump: PropTypes.shape(dumpShape),\n  onChange: PropTypes.func.isRequired,\n}\n\ninterface DumpFieldState {\n  value: string | null\n  error: string | null\n}\n\ninterface EditorState {\n  summary: DumpFieldState\n  description: DumpFieldState\n}\n\ntype SetEditorState = React.Dispatch<React.SetStateAction<EditorState>>\n\nfunction DumpEditorComponent(props: DumpEditorProps): JSX.Element {\n  const { dump, onChange } = props\n\n  const initialState: EditorState = {\n    summary: {\n      value: props.dump?.summary || null,\n      error: null,\n    },\n    description: {\n      value: props.dump?.description || null,\n      error: null,\n    },\n  }\n\n  const [state, setState]: [EditorState, SetEditorState] = useState(initialState)\n\n  useEffect(() => {\n    const id = dump?.id || null\n    const summary = state.summary.value || ''\n    const description = state.description.value || ''\n    onChange(createDump(id, summary, description))\n  }, [state, dump?.id, onChange])\n\n  function onFieldChange(field: keyof EditorState, value: string): void {\n    const hasError = isEmpty(value)\n    const error = hasError ? 'Field must not be empty' : null\n    setState((prevState: EditorState) => ({\n      ...prevState,\n      [field]: { value, hasError, error },\n    }))\n  }\n\n  function onSubmit(event: FormEvent<HTMLFormElement>): void {\n    event.preventDefault()\n  }\n\n  return (\n    <form className={props.className} noValidate autoComplete=\"off\" onSubmit={onSubmit}>\n      <div>\n        <AdvancedInput\n          label=\"Summary\"\n          value={state.summary.value || ''}\n          onChange={(value: string) => onFieldChange('summary', value)}\n          error={state.summary.error}\n        />\n      </div>\n      <div>\n        <AdvancedInput\n          label=\"Description\"\n          value={state.description.value || ''}\n          onChange={(value: string) => onFieldChange('description', value)}\n          error={state.description.error}\n          multiline\n        />\n      </div>\n    </form>\n  )\n}\n\nDumpEditorComponent.propTypes = propTypes\n","import { v4 as uuid4 } from 'uuid'\nimport { Dump } from '../types/dump-types'\n\nexport function createDump(id: string | null, summary: string, description: string): Dump {\n  return {\n    id: id || uuid4(),\n    timestamp: Date.now(),\n    summary: summary.trim(),\n    description: description,\n    tags: [],\n  }\n}\n","import { Fab, Theme, withTheme } from '@material-ui/core'\nimport { Add as AddIcon } from '@material-ui/icons'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { ThemeProps } from 'styled-components'\n\nexport const FloatingButton = withTheme(styled(FloatingButtonComponent)`\n  position: fixed;\n  top: auto;\n  bottom: ${(props: FloatingButtonProps & ThemeProps<Theme>) => 30 + (props.index || 0) * 70}px;\n  left: auto;\n  right: 30px;\n`)\n\ninterface FloatingButtonProps {\n  className: string\n  index?: number\n  onClick: () => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n}\n\nfunction FloatingButtonComponent(props: FloatingButtonProps): JSX.Element {\n  return (\n    <Fab className={props.className} color=\"primary\" aria-label=\"add\" onClick={props.onClick}>\n      <AddIcon />\n    </Fab>\n  )\n}\n\nFloatingButtonComponent.propTypes = propTypes\n\nFloatingButtonComponent.defaultProps = {\n  onClick: () => {},\n}\n","import { IconButton, withTheme } from '@material-ui/core'\nimport { ArrowBack, Close, Delete, Edit, Save, Search } from '@material-ui/icons'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nexport const ActionButton = withTheme(styled(ActionButtonComponent)``)\n\ninterface ActionButtonProps {\n  className: string\n  action: 'search' | 'back' | 'cancel' | 'delete' | 'edit' | 'save'\n  disabled: boolean\n  onClick: () => void\n  edge: 'start' | 'end'\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  action: PropTypes.oneOf(['search', 'back', 'cancel', 'delete', 'edit', 'save']).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  edge: PropTypes.oneOf(['start', 'end']).isRequired,\n}\n\nfunction ActionButtonComponent(props: ActionButtonProps): JSX.Element {\n  function selectIcon(): JSX.Element | null {\n    switch (props.action) {\n      case 'search':\n        return <Search />\n      case 'back':\n        return <ArrowBack />\n      case 'cancel':\n        return <Close />\n      case 'delete':\n        return <Delete />\n      case 'edit':\n        return <Edit />\n      case 'save':\n        return <Save />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <IconButton\n      className={props.className}\n      disabled={props.disabled}\n      onClick={props.onClick}\n      edge={props.edge}\n      color=\"inherit\"\n      aria-label={props.action}\n    >\n      {selectIcon()}\n    </IconButton>\n  )\n}\n\nActionButtonComponent.propTypes = propTypes\n\nActionButtonComponent.defaultProps = {\n  disabled: false,\n  onClick: () => {},\n}\n","import { AppBar as ReactAppBar, Toolbar, Typography, withTheme } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nexport const AppBar = withTheme(styled(AppBarComponent)`\n  flex-grow: 1;\n\n  & > div > h6 {\n    flex-grow: 1;\n  }\n`)\n\ninterface AppBarProps {\n  className: string\n  title: string\n  primaryButton: JSX.Element | null\n  secondaryButton: JSX.Element | null\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  primaryButton: PropTypes.node,\n  secondaryButton: PropTypes.node,\n}\n\nfunction AppBarComponent(props: AppBarProps): JSX.Element {\n  return (\n    <ReactAppBar className={props.className} position=\"sticky\">\n      <Toolbar>\n        {props.primaryButton}\n        <Typography variant=\"h6\">{props.title}</Typography>\n        {props.secondaryButton}\n      </Toolbar>\n    </ReactAppBar>\n  )\n}\n\nAppBarComponent.propTypes = propTypes\n","import { Container, Theme, Typography, withTheme } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport styled, { ThemeProps } from 'styled-components'\n\nexport const PageContent = withTheme(styled(PageContentComponent)`\n  margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(0, 0, 15)};\n\n  > h6 {\n    margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n  }\n`)\n\ninterface PageContentComponentProps {\n  className: string\n  title: string | null\n  children: JSX.Element[]\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  title: PropTypes.string,\n}\n\nfunction PageContentComponent(props: PageContentComponentProps): JSX.Element {\n  return (\n    <Container className={props.className} maxWidth={false}>\n      {props.title !== null && <Typography variant=\"h6\">{props.title}</Typography>}\n      {props.children}\n    </Container>\n  )\n}\n\nPageContentComponent.propTypes = propTypes\n\nPageContentComponent.defaultProps = {\n  title: null,\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { EditorAction, EditorState, useEditorState } from '../../hooks/editor-hook'\nimport { Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport { useCancelShortcut, useSaveShortcut } from '../../hooks/shortcut-hooks'\nimport { Dump, dumpShape } from '../../types/dump-types'\nimport { DumpDetails } from '../dump-details'\nimport { DumpEditor } from '../dump-editor'\nimport { FloatingButton } from '../floating-button'\nimport { ActionButton } from '../header/action-button'\nimport { AppBar } from '../header/app-bar'\nimport { PageContent } from './page-content'\n\ninterface EditorBaseProps {\n  title: string\n  selectedDump?: Dump | null\n  onSave: (dump: Dump) => void\n\n  useNavigation: () => Navigation\n  useEditorState: (selectedDump: Dump | null) => [EditorState, EditorAction]\n}\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  selectedDump: PropTypes.shape(dumpShape),\n  onSave: PropTypes.func.isRequired,\n\n  useNavigation: PropTypes.func.isRequired,\n  useEditorState: PropTypes.func.isRequired,\n}\n\nexport function EditorBase(props: EditorBaseProps) {\n  const navigation = props.useNavigation()\n  const [editorState, onChange] = props.useEditorState(props?.selectedDump || null)\n\n  useCancelShortcut(navigation.navigateHome)\n  useSaveShortcut(onSave)\n\n  function onSave(): void {\n    if (!editorState.saveDisabled && editorState.changedDump !== null) {\n      props.onSave(editorState.changedDump)\n    }\n  }\n\n  return (\n    <>\n      <AppBar\n        title=\"Braindump\"\n        primaryButton={<ActionButton action=\"cancel\" onClick={navigation.navigateHome} edge=\"start\" />}\n        secondaryButton={<ActionButton action=\"save\" disabled={editorState.saveDisabled} onClick={onSave} edge=\"end\" />}\n      />\n\n      <PageContent title={props.title}>\n        <DumpEditor dump={editorState.selectedDump} onChange={onChange} />\n        {editorState.changedDump !== null && <DumpDetails dump={editorState.changedDump} />}\n        {editorState.selectedDump !== null && <FloatingButton onClick={navigation.navigateToCreate} />}\n      </PageContent>\n    </>\n  )\n}\n\nEditorBase.propTypes = propTypes\n\nEditorBase.defaultProps = {\n  useNavigation,\n  useEditorState,\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport { addDump } from '../../store/dump-store-actions'\nimport { useAppDispatch } from '../../store/store'\nimport { Dump } from '../../types/dump-types'\nimport { EditorBase } from './editor-base-page'\n\ninterface DumpCreatorPageProps {\n  useNavigation: () => Navigation\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useNavigation: PropTypes.func.isRequired,\n}\n\nexport function DumpCreatorPage(props: DumpCreatorPageProps) {\n  const navigation = props.useNavigation()\n  const dispatch = props.useDispatch()\n\n  function onSave(dump: Dump): void {\n    dispatch(addDump(dump))\n    navigation.navigateToEdit(dump)\n  }\n\n  return <EditorBase title=\"Create new dump\" onSave={onSave} />\n}\n\nDumpCreatorPage.propTypes = propTypes\n\nDumpCreatorPage.defaultProps = {\n  useNavigation,\n  useDispatch: useAppDispatch,\n}\n","export type SearchHash = string[]\n\nexport function createSearchHash(...values: string[]): SearchHash {\n  type StringSet = { [value: string]: boolean }\n\n  return Object.keys(\n    values\n      .map((value: string) => value.replace(\"'\", ''))\n      .map((value: string) => value.toLowerCase())\n      .flatMap((value: string) => value.split(/[^a-z0-9]/))\n      .filter((value: string) => value.length > 0)\n      .reduce((set: StringSet, value: string) => {\n        set[value] = true\n        return set\n      }, {})\n  )\n}\n\nexport function scoreSearchResult(content: SearchHash, keywords: SearchHash): number {\n  const searchableContent = content.join(';')\n  return keywords.filter((kw: string) => searchableContent.includes(kw)).length\n}\n","import { createSearchHash, scoreSearchResult } from '../services/search-service'\nimport { RootState, useAppSelector } from '../store/store'\nimport { Dump } from '../types/dump-types'\n\nexport function useDumpByIdSelector(dumpId?: string): Dump | null {\n  return useAppSelector((state: RootState) => state.dumps.find((dump: Dump) => dump.id === dumpId) || null)\n}\n\nexport function useDumpByFilterSelector(filter: string): Dump[] {\n  return useAppSelector((globalState: RootState): Dump[] => {\n    const scores = globalState.dumps.map((dump: Dump) => scoreDump(dump, filter))\n    return filterDumps(globalState.dumps, scores)\n  })\n}\n\nfunction scoreDump(dump: Dump, filter: string): number {\n  const searchableDump = createSearchHash(dump.summary, dump.description, ...dump.tags)\n  const searchableFilter = createSearchHash(filter)\n  return scoreSearchResult(searchableDump, searchableFilter)\n}\n\nfunction filterDumps(dumps: Dump[], scores: number[]): Dump[] {\n  const maxScore = Math.max(...scores)\n  if (maxScore === 0) {\n    return []\n  }\n\n  const maxIndexes = scores\n    .map((score: number, index: number) => (score === maxScore ? index : -1))\n    .filter((index: number) => index >= 0)\n  return maxIndexes.map((index: number) => dumps[index])\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { useDumpByIdSelector } from '../../hooks/dump-selector-hooks'\nimport { DumpRouteParam, Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport { useCancelShortcut, useEditShortcut } from '../../hooks/shortcut-hooks'\nimport { removeDump } from '../../store/dump-store-actions'\nimport { Dump } from '../../types/dump-types'\nimport { DumpDetails } from '../dump-details'\nimport { FloatingButton } from '../floating-button'\nimport { ActionButton } from '../header/action-button'\nimport { AppBar } from '../header/app-bar'\nimport { PageContent } from './page-content'\n\ninterface ShowDumpViewProps {\n  useDumpParam: () => DumpRouteParam\n  useNavigation: () => Navigation\n  useDumpByIdSelector: (dumpId?: string) => Dump | null\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useDumpParam: PropTypes.func.isRequired,\n  useNavigation: PropTypes.func.isRequired,\n  useDumpByIdSelector: PropTypes.func.isRequired,\n  useDispatch: PropTypes.func.isRequired,\n}\n\nexport function DumpDetailsPage(props: ShowDumpViewProps) {\n  const routeParams = props.useDumpParam()\n  const navigation = props.useNavigation()\n  const dump = props.useDumpByIdSelector(routeParams.dumpId)\n  const dispatch = props.useDispatch()\n\n  useCancelShortcut(navigation.navigateHome)\n  useEditShortcut(onEdit)\n\n  function onEdit(): void {\n    if (dump !== null) {\n      navigation.navigateToEdit(dump)\n    }\n  }\n\n  function onDelete(): void {\n    if (dump !== null) {\n      dispatch(removeDump(dump))\n      navigation.navigateHome()\n    }\n  }\n\n  return (\n    <>\n      <AppBar\n        title=\"Braindump\"\n        primaryButton={<ActionButton action=\"back\" onClick={navigation.navigateHome} edge=\"start\" />}\n        secondaryButton={\n          <>\n            <ActionButton action=\"edit\" disabled={dump === null} onClick={onEdit} edge=\"end\" />\n            <ActionButton action=\"delete\" disabled={dump === null} onClick={onDelete} edge=\"end\" />\n          </>\n        }\n      />\n\n      <PageContent>\n        {dump !== null && <DumpDetails dump={dump} />}\n        <FloatingButton onClick={navigation.navigateToCreate} />\n      </PageContent>\n    </>\n  )\n}\n\nDumpDetailsPage.propTypes = propTypes\n\nDumpDetailsPage.defaultProps = {\n  useDumpParam: () => useParams<DumpRouteParam>(),\n  useNavigation,\n  useDumpByIdSelector,\n  useDispatch: () => useDispatch<any>(),\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDumpByIdSelector } from '../../hooks/dump-selector-hooks'\nimport { DumpRouteParam } from '../../hooks/navigation-hook'\nimport { updateDump } from '../../store/dump-store-actions'\nimport { useAppDispatch } from '../../store/store'\nimport { Dump } from '../../types/dump-types'\nimport { EditorBase } from './editor-base-page'\n\ninterface DumpEditorPageProps {\n  useDumpParam: () => DumpRouteParam\n  useDumpByIdSelector: (routeParam?: string) => Dump | null\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useDumpParam: PropTypes.func.isRequired,\n  useDumpByIdSelector: PropTypes.func.isRequired,\n  useDispatch: PropTypes.func.isRequired,\n}\n\nexport function DumpEditorPage(props: DumpEditorPageProps) {\n  const routeParams = props.useDumpParam()\n  const selectedDump = props.useDumpByIdSelector(routeParams.dumpId)\n  const dispatch = props.useDispatch()\n\n  function onSave(dump: Dump): void {\n    dispatch(updateDump(dump))\n  }\n\n  return <EditorBase title=\"Edit dump\" selectedDump={selectedDump} onSave={onSave} />\n}\n\nDumpEditorPage.propTypes = propTypes\n\nDumpEditorPage.defaultProps = {\n  useDumpParam: () => useParams<DumpRouteParam>(),\n  useDumpByIdSelector,\n  useDispatch: useAppDispatch,\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { Dump } from '../types/dump-types'\nimport { isEmpty } from '../validators/string-validators'\n\nexport interface EditorState {\n  selectedDump: Dump | null\n  changedDump: Dump | null\n  saveDisabled: boolean\n}\n\nexport type EditorAction = (dump: Dump) => void\n\nexport function useEditorState(selectedDump: Dump | null): [EditorState, EditorAction] {\n  const [state, setState] = useState<EditorState>({\n    selectedDump,\n    changedDump: selectedDump,\n    saveDisabled: true,\n  })\n\n  useEffect(() => {\n    setState({ selectedDump, changedDump: selectedDump, saveDisabled: true })\n  }, [selectedDump])\n\n  const onChange = useCallback((dump: Dump): void => {\n    setState((prevState: EditorState) => ({\n      ...prevState,\n      changedDump: dump,\n      saveDisabled: !validate(prevState.selectedDump, dump),\n    }))\n  }, [])\n\n  function validate(oldDump: Dump | null, newDump: Dump): boolean {\n    const validSummary = !isEmpty(newDump.summary)\n    const validDescription = !isEmpty(newDump.description)\n    const summaryChanged = newDump.summary.trim() !== oldDump?.summary\n    const descriptionChanged = newDump.description !== oldDump?.description\n    return validSummary && validDescription && (summaryChanged || descriptionChanged)\n  }\n\n  return [state, onChange]\n}\n","import { RootState } from '../store/store'\n\nexport async function importState(file: File): Promise<RootState> {\n  return new Promise<RootState>((resolve) => _importDumps(file, resolve))\n}\n\nfunction _importDumps(file: File, resolve: (result: RootState) => void): void {\n  const reader = new FileReader()\n  reader.onload = () => {\n    const fileData: string = _decodeData(reader.result)\n    const jsonData: any = JSON.parse(fileData)\n    resolve(jsonData)\n  }\n\n  reader.readAsText(file)\n}\n\nfunction _decodeData(data: string | ArrayBuffer | null): string {\n  if (data === null) {\n    return ''\n  }\n  if (data instanceof ArrayBuffer) {\n    return new TextDecoder().decode(data)\n  }\n  return data\n}\n\nexport function exportState(state: RootState): void {\n  const jsonData: string = JSON.stringify(state)\n  const blob = new Blob([jsonData], { type: 'application/json' })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.download = 'braindump.json'\n  link.href = url\n  link.click()\n}\n","import { FormControl, Input, InputAdornment, InputLabel } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { ChangeEvent, useRef, useState } from 'react'\nimport { useCancelShortcut } from '../hooks/shortcut-hooks'\nimport { ActionButton } from './header/action-button'\n\ninterface DumpSearchFilterProps {\n  onChange: (filter: string) => void\n}\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n\nexport function DumpSearchFilter(props: DumpSearchFilterProps): JSX.Element {\n  const [state, setState]: [string, React.Dispatch<string>] = useState('')\n  const inputRef = useRef<HTMLInputElement>()\n\n  useCancelShortcut(() => onChange(''))\n\n  function onChange(filter: string): void {\n    props.onChange(filter)\n    setState(filter)\n    inputRef.current?.focus()\n  }\n\n  return (\n    <FormControl>\n      <InputLabel htmlFor=\"search\">Search</InputLabel>\n      <Input\n        id=\"search\"\n        inputRef={inputRef}\n        value={state}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <ActionButton action={state === '' ? 'search' : 'cancel'} onClick={() => onChange('')} edge={'end'} />\n          </InputAdornment>\n        }\n        autoFocus\n        autoComplete=\"off\"\n      />\n    </FormControl>\n  )\n}\n\nDumpSearchFilter.propTypes = propTypes\n","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, withTheme } from '@material-ui/core'\nimport { Delete as DeleteIcon } from '@material-ui/icons'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Dump, dumpShape } from '../types/dump-types'\n\nexport const DumpSearchResults = withTheme(styled(DumpSearchComponent)``)\n\ninterface SearchProps {\n  dumps: Dump[]\n  onDumpSelection: (dump: Dump) => void\n  onDumpRemoval: (dump: Dump) => void\n}\n\nconst propTypes = {\n  dumps: PropTypes.arrayOf(PropTypes.shape(dumpShape).isRequired).isRequired,\n  onDumpSelection: PropTypes.func.isRequired,\n  onDumpRemoval: PropTypes.func.isRequired,\n}\n\nfunction DumpSearchComponent(props: SearchProps): JSX.Element {\n  const listItems = props.dumps.map((dump: Dump) => (\n    <ListItem key={dump.id} button onClick={() => props.onDumpSelection(dump)}>\n      <ListItemText primary={dump.summary} secondary={new Date(dump.timestamp).toLocaleString()} />\n      <ListItemSecondaryAction onClick={() => props.onDumpRemoval(dump)}>\n        <IconButton edge=\"end\" aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ))\n\n  return <List>{listItems}</List>\n}\n\nDumpSearchComponent.propTypes = propTypes\n","import { IconButton, Menu, MenuItem } from '@material-ui/core'\nimport { Menu as MenuIcon } from '@material-ui/icons'\nimport PropTypes from 'prop-types'\nimport React, { MouseEvent, useState } from 'react'\nimport { MenuAction, menuActionShape } from '../../types/menu-action-types'\n\ninterface MenuButtonProps {\n  actions: MenuAction[]\n}\n\nconst propTypes = {\n  actions: PropTypes.arrayOf(PropTypes.shape(menuActionShape).isRequired).isRequired,\n}\n\nexport function MenuButton(props: MenuButtonProps): JSX.Element {\n  const [anchor, setAnchor] = useState<HTMLElement | null>(null)\n\n  const onMenuOpen = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchor(event.currentTarget)\n  }\n\n  const onMenuClose = () => {\n    setAnchor(null)\n  }\n\n  const onAction = (action: () => void) => {\n    action()\n    onMenuClose()\n  }\n\n  const menuItems = props.actions.map((menuAction: MenuAction, index: number) => (\n    <MenuItem key={`menu-item-${index}`} onClick={() => onAction(menuAction.action)}>\n      {menuAction.title}\n    </MenuItem>\n  ))\n\n  return (\n    <>\n      <IconButton onClick={onMenuOpen} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n\n      {menuItems.length > 0 && (\n        <Menu id=\"app-menu\" anchorEl={anchor} keepMounted open={!!anchor} onClose={onMenuClose}>\n          {menuItems}\n        </Menu>\n      )}\n    </>\n  )\n}\n\nMenuButton.propTypes = propTypes\n","import PropTypes from 'prop-types'\nimport React, { ChangeEvent, useRef, useState } from 'react'\nimport { useDumpByFilterSelector } from '../../hooks/dump-selector-hooks'\nimport { Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport { exportState, importState } from '../../services/import-export-service'\nimport { mergeDumps, removeDump } from '../../store/dump-store-actions'\nimport { RootState, store, useAppDispatch } from '../../store/store'\nimport { Dump } from '../../types/dump-types'\nimport { MenuAction } from '../../types/menu-action-types'\nimport { DumpSearchFilter } from '../dump-search-filter'\nimport { DumpSearchResults } from '../dump-search-results'\nimport { FloatingButton } from '../floating-button'\nimport { AppBar } from '../header/app-bar'\nimport { MenuButton } from '../header/menu-button'\nimport { PageContent } from './page-content'\n\ninterface DumpSearchPageProps {\n  useDumpByFilterSelector: (filter: string) => Dump[]\n  useNavigation: () => Navigation\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useDumpByFilterSelector: PropTypes.func.isRequired,\n  useNavigation: PropTypes.func.isRequired,\n  useDispatch: PropTypes.func.isRequired,\n}\n\ninterface SearchState {\n  filter: string\n  selected: Dump | null\n}\n\ntype SetSearchState = React.Dispatch<React.SetStateAction<SearchState>>\n\nexport function DumpSearchPage(props: DumpSearchPageProps) {\n  const navigation = props.useNavigation()\n\n  const initialState: SearchState = {\n    filter: '',\n    selected: null,\n  }\n\n  const [state, setState]: [SearchState, SetSearchState] = useState(initialState)\n\n  const dumps = props.useDumpByFilterSelector(state.filter)\n\n  const dispatch = props.useDispatch()\n\n  const exportAction = () => {\n    const state: RootState = store.getState()\n    exportState(state)\n  }\n\n  const inputFile = useRef<HTMLInputElement | null>(null)\n\n  const importAction = () => {\n    inputFile.current?.click()\n  }\n\n  const onFileChoice = async (event: ChangeEvent<HTMLInputElement>) => {\n    const file: File | null = event.target.files?.[0] || null\n    if (file !== null) {\n      const state: RootState = await importState(file)\n      dispatch(mergeDumps(state.dumps))\n    }\n  }\n\n  const menuActions: MenuAction[] = [\n    { title: 'Export', action: exportAction },\n    { title: 'Import', action: importAction },\n  ]\n\n  const onSearchFilterChange = (filter: string) => {\n    setState((prevState) => ({ ...prevState, filter }))\n  }\n\n  const onDumpRemoval = (dump: Dump) => {\n    dispatch(removeDump(dump))\n  }\n\n  return (\n    <>\n      <AppBar title=\"Braindump\" primaryButton={<MenuButton actions={menuActions} />} />\n\n      <input\n        type=\"file\"\n        ref={inputFile}\n        accept={'application/json, .json'}\n        onChange={onFileChoice}\n        style={{ display: 'none' }}\n      />\n\n      <PageContent title=\"Find dumps\">\n        <DumpSearchFilter onChange={onSearchFilterChange} />\n        {dumps.length > 0 && (\n          <DumpSearchResults\n            dumps={dumps}\n            onDumpSelection={navigation.navigateToDetails}\n            onDumpRemoval={onDumpRemoval}\n          />\n        )}\n        <FloatingButton onClick={navigation.navigateToCreate} />\n      </PageContent>\n    </>\n  )\n}\n\nDumpSearchPage.propTypes = propTypes\n\nDumpSearchPage.defaultProps = {\n  useDumpByFilterSelector,\n  useNavigation,\n  useDispatch: useAppDispatch,\n}\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { DumpCreatorPage } from './components/pages/dump-creator-page'\nimport { DumpDetailsPage } from './components/pages/dump-details-page'\nimport { DumpEditorPage } from './components/pages/dump-editor-page'\nimport { DumpSearchPage } from './components/pages/dump-search-page'\n\nexport function App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/create\">\n          <DumpCreatorPage />\n        </Route>\n        <Route path=\"/edit/dumps/:dumpId\">\n          <DumpEditorPage />\n        </Route>\n        <Route path=\"/show/dumps/:dumpId\">\n          <DumpDetailsPage />\n        </Route>\n        <Route path=\"/\">\n          <DumpSearchPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle``\n","import { CssBaseline, StylesProvider } from '@material-ui/core'\nimport React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { App } from './App'\nimport { GlobalStyle } from './global-styles'\nimport { reportWebVitals } from './reportWebVitals'\nimport { store } from './store/store'\n\nReactDOM.render(withAppContext(<App />), document.getElementById('root'))\n\nfunction withAppContext(element: JSX.Element): JSX.Element {\n  return (\n    <StrictMode>\n      <CssBaseline />\n      <StylesProvider injectFirst>\n        <GlobalStyle />\n        <Provider store={store}>{element}</Provider>\n      </StylesProvider>\n    </StrictMode>\n  )\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { ReportHandler } from 'web-vitals'\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n"],"sourceRoot":""}