{"version":3,"sources":["services/dump-service.ts","store/dump-store.ts","store/store.ts","services/search-service.ts","components/dump-search.tsx","views/search-dumps-view.tsx","components/key-event-handler.ts","components/dump-editor.tsx","validators/string-validators.ts","services/create-service.ts","views/create-dump-view.tsx","components/dump-widget.tsx","views/show-dump-view.tsx","components/floating-button.tsx","views/edit-dump-view.tsx","components/header/app-bar.tsx","services/import-export-service.ts","components/header/menu-button.tsx","components/header/back-button.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LocalStorageKey","postDumps","dumps","data","JSON","stringify","window","localStorage","setItem","DumpActionType","setDumps","setDumpAction","type","dispatch","getState","initialState","getItem","parse","error","findAllDumps","store","createStore","combineReducers","state","action","setDumpsAction","addDumpAction","dump","updateDumpAction","index","findIndex","d","id","newState","removeDumpAction","filter","dumpListAction","dumpAction","applyMiddleware","thunk","useAppSelector","useSelector","createSearchHash","values","Object","keys","map","value","replace","toLowerCase","flatMap","split","length","reduce","set","DumpSearch","withTheme","styled","props","adornment","InputAdornment","position","Search","searchForm","FormControl","InputLabel","htmlFor","Input","autoFocus","onChange","event","onSearchFilterChange","target","endAdornment","autoComplete","listItems","ListItem","button","onClick","onDumpSelection","ListItemText","primary","summary","secondary","Date","timestamp","toLocaleString","ListItemSecondaryAction","onDumpRemoval","IconButton","edge","Delete","List","SearchDumpsView","useState","selected","setState","history","useHistory","globalState","scores","searchableDump","description","tags","searchableFilter","content","keywords","searchableContent","join","kw","includes","scoreSearchResult","scoreDump","maxScore","Math","max","score","filterDumps","useDispatch","prevState","push","removeDump","isEditEvent","key","isSaveEvent","ctrlKey","isCancelEvent","EventHandlerBuilder","handlers","this","matcher","handler","h","preventDefault","DumpEditor","currentDump","hasError","saveEnabled","setSaveEnabled","onFieldChange","field","trim","isEmpty","onSave","uuid4","now","createDump","eventHandler","onCancel","build","onKeyDown","useEffect","document","addEventListener","removeEventListener","validSummary","validDescription","summaryChanged","descriptionChanged","className","noValidate","onSubmit","TextField","label","variant","helperText","multiline","rows","Button","disabled","color","size","startIcon","Save","theme","spacing","CreateDumpView","addDump","goBack","DumpWidget","onEdit","Edit","ShowDumpView","routeParams","useParams","dumpId","FloatingButton","Fab","Add","EditDumpView","updateDump","AppBar","Toolbar","children","Typography","title","importState","file","a","Promise","resolve","_importDumps","reader","FileReader","onload","fileData","ArrayBuffer","TextDecoder","decode","_decodeData","result","jsonData","readAsText","MenuButton","anchor","setAnchor","onMenuClose","menuItems","actions","menuAction","MenuItem","onAction","currentTarget","Menu","anchorEl","keepMounted","open","onClose","BackButton","onBack","App","homeMatch","useRouteMatch","inputFile","useRef","onFileChoice","files","menuActions","blob","Blob","url","URL","createObjectURL","link","createElement","download","href","click","exportState","current","navigateTo","route","isExact","ref","accept","style","display","Container","maxWidth","path","element","onPerfEntry","ReactDOM","render","CssBaseline","StylesProvider","injectFirst","basename","process","getElementById","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"kQAEMA,EACG,QAiBF,SAASC,EAAUC,GACxB,IAAMC,EAAOC,KAAKC,UAAUH,GAC5BI,OAAOC,aAAaC,QAAQR,EAAuBG,GCNrD,IAAMM,EACO,YADPA,EAEM,WAFNA,EAGS,cAHTA,EAIS,cAGR,SAASC,EAASR,GACvB,IAAMS,EAAgC,CACpCC,KAAMH,EACNP,MAAOA,GAGT,OAAO,SAACW,EAA4BC,GAClCD,EAASF,GAETV,EADyBa,MA4C7B,IAAMC,EDrEC,WACL,IAAMZ,EAAsBG,OAAOC,aAAaS,QAAQhB,GACxD,GAAa,OAATG,EACF,MAAO,GAGT,IAEE,OADiBC,KAAKa,MAAMd,GACZD,MAChB,MAAOgB,GACP,MAAO,IC2DUC,G,YCtERC,EAAQC,YACnBC,YAAgB,CACdpB,MDsEG,WAA4E,IAAvDqB,EAAsD,uDAAtCR,EAAcS,EAAwB,uCAChF,SAASC,EAAevB,GACtB,OAAO,YAAIA,GAGb,SAASwB,EAAcH,EAAeI,GACpC,MAAM,GAAN,mBAAWJ,GAAX,CAAkBI,IAGpB,SAASC,EAAiBL,EAAeI,GACvC,IAAME,EAAQN,EAAMO,WAAU,SAACC,GAAD,OAAaA,EAAEC,KAAOL,EAAKK,MACzD,GAAIH,EAAQ,EACV,OAAON,EAGT,IAAMU,EAAQ,YAAOV,GAErB,OADAU,EAASJ,GAASF,EACXM,EAGT,SAASC,EAAiBX,EAAeI,GACvC,OAAOJ,EAAMY,QAAO,SAACJ,GAAD,OAAaA,EAAEC,KAAOL,EAAKK,MAGjD,OAAQR,EAAOZ,MACb,KAAKH,EACH,IAAM2B,EAAiBZ,EACvB,OAAOC,EAAeW,EAAelC,OAEvC,KAAKO,EACH,IAAM4B,EAAab,EACnB,OAAOE,EAAcH,EAAOc,EAAWV,MAEzC,KAAKlB,EACH,IAAM4B,EAAab,EACnB,OAAOI,EAAiBL,EAAOc,EAAWV,MAE5C,KAAKlB,EACH,IAAM4B,EAAab,EACnB,OAAOU,EAAiBX,EAAOc,EAAWV,MAE9C,OAAOJ,KC7GPe,YAAgBC,MAILC,EAAkDC,ICXxD,SAASC,IAAmD,IAAD,uBAA9BC,EAA8B,yBAA9BA,EAA8B,gBAGhE,OAAOC,OAAOC,KACZF,EACGG,KAAI,SAACC,GAAD,OAAmBA,EAAMC,QAAQ,IAAK,OAC1CF,KAAI,SAACC,GAAD,OAAmBA,EAAME,iBAC7BC,SAAQ,SAACH,GAAD,OAAmBA,EAAMI,MAAM,gBACvChB,QAAO,SAACY,GAAD,OAAmBA,EAAMK,OAAS,KACzCC,QAAO,SAACC,EAAgBP,GAEvB,OADAO,EAAIP,IAAS,EACNO,IACN,K,yICIIC,EAAaC,YAAUC,aAgBpC,SAA6BC,GAC3B,IAIMC,EACJ,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,MAIEC,EACJ,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,oBACA,cAACC,EAAA,EAAD,CAAOnC,GAAG,SAASoC,WAAS,EAACC,SAbJ,SAACC,GAC5BZ,EAAMa,qBAAqBD,EAAME,OAAOzB,QAYuB0B,aAAcd,EAAWe,aAAa,WAIjGC,EAAYjB,EAAMxD,MAAM4C,KAAI,SAACnB,GAAD,OAChC,eAACiD,EAAA,EAAD,CAAwBC,QAAM,EAACC,QAAS,kBAAMpB,EAAMqB,gBAAgBpD,IAApE,UACE,cAACqD,EAAA,EAAD,CAAcC,QAAStD,EAAKuD,QAASC,UAAW,IAAIC,KAAKzD,EAAK0D,WAAWC,mBACzE,cAACC,EAAA,EAAD,CAAyBT,QAAS,kBAAMpB,EAAM8B,cAAc7D,IAA5D,SACE,cAAC8D,EAAA,EAAD,CAAYC,KAAK,MAAM,aAAW,SAAlC,SACE,cAACC,EAAA,EAAD,UAJShE,EAAKK,OAUtB,OACE,qCACG+B,EACAL,EAAMxD,MAAMkD,OAAS,EAAI,cAACwC,EAAA,EAAD,UAAOjB,IAAoB,UAhDvBlB,CAAA,IAAD,uBCF5B,SAASoC,IACd,IAKA,EAAyDC,mBALvB,CAChC3D,OAAQ,GACR4D,SAAU,OAGZ,mBAAOxE,EAAP,KAAcyE,EAAd,KAEMC,EAAUC,cAEVhG,EAAQsC,GAAe,SAAC2D,GAC5B,IAAMC,EAASD,EAAYjG,MAAM4C,KAAI,SAACnB,GAAD,OA+BzC,SAAmBA,EAAYQ,GAC7B,IAAMkE,EAAiB3D,EAAgB,WAAhB,GAAiBf,EAAKuD,QAASvD,EAAK2E,aAApC,mBAAoD3E,EAAK4E,QAC1EC,EAAmB9D,EAAiBP,GAC1C,OF3CK,SAA2BsE,EAAqBC,GACrD,IAAMC,EAAoBF,EAAQG,KAAK,KACvC,OAAOF,EAASvE,QAAO,SAAC0E,GAAD,OAAgBF,EAAkBG,SAASD,MAAKzD,OEyChE2D,CAAkBV,EAAgBG,GAlCcQ,CAAUrF,EAAMJ,EAAMY,WAC3E,OAoCJ,SAAqBjC,EAAekG,GAClC,IAAMa,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQd,IAC7B,GAAiB,IAAba,EACF,MAAO,GAMT,OAHmBb,EAChBtD,KAAI,SAACsE,EAAevF,GAAhB,OAAmCuF,IAAUH,EAAWpF,GAAS,KACrEM,QAAO,SAACN,GAAD,OAAmBA,GAAS,KACpBiB,KAAI,SAACjB,GAAD,OAAmB3B,EAAM2B,MA7CtCwF,CAAYlB,EAAYjG,MAAOkG,MAGlCvF,EAAWyG,cAcjB,OACE,qCACE,4CACA,cAAC/D,EAAD,CACErD,MAAOA,EACPqE,qBAjBuB,SAACpC,GAC5B6D,GAAS,SAACuB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCpF,eAiBrC4C,gBAdkB,SAACpD,GACvBsE,EAAQuB,KAAR,sBAA4B7F,EAAKK,MAc7BwD,cAXgB,SAAC7D,GACrBd,EJoBG,SAAoBc,GACzB,IAAMO,EAA+B,CACnCtB,KAAMH,EACNkB,KAAMA,GAGR,OAAO,SAACd,EAAgCC,GACtCD,EAASqB,GAETjC,EADyBa,MI5BhB2G,CAAW9F,U,gFCrCxB,SAAS+F,EAAYpD,GACnB,MAAqB,MAAdA,EAAMqD,IAGf,SAASC,GAAYtD,GACnB,OAAOA,EAAMuD,SAAyB,MAAdvD,EAAMqD,IAGhC,SAASG,GAAcxD,GACrB,MAAqB,WAAdA,EAAMqD,IAGR,I,GAAMI,GAAb,WACE,aAAoD,IAAhCC,EAA+B,uDAAJ,GAAI,yBAA/BA,WADtB,0CAGE,SAAOxG,GAKL,OAJAyG,KAAKD,SAASR,KAAK,CACjBU,QAASR,EACTlG,OAAQA,IAEHyG,OARX,oBAWE,SAAOzG,GAKL,OAJAyG,KAAKD,SAASR,KAAK,CACjBU,QAASN,GACTpG,OAAQA,IAEHyG,OAhBX,sBAmBE,SAASzG,GAKP,OAJAyG,KAAKD,SAASR,KAAK,CACjBU,QAASJ,GACTtG,OAAQA,IAEHyG,OAxBX,mBA2BE,WAAyC,IAAD,OACtC,OAAO,SAAC3D,GACN,IAAM6D,EAA0B,EAAKH,SAAS7F,QAAO,SAACiG,GAAD,OAAqBA,EAAEF,QAAQ5D,MAC7D,IAAnB6D,EAAQ/E,SACV+E,EAAQ,GAAG3G,SACX8C,EAAM+D,uBAhCd,KCPaC,GAAa9E,YAAUC,aA8CpC,SAA6BC,GAAyB,IAAD,IAC7C3C,EAA4B,CAChCwH,YAAa7E,EAAM/B,MAAQ,KAC3BuD,QAAS,CACPnC,OAAO,UAAAW,EAAM/B,YAAN,eAAYuD,UAAW,KAC9BsD,UAAU,EACVtH,MAAO,MAEToF,YAAa,CACXvD,OAAO,UAAAW,EAAM/B,YAAN,eAAY2E,cAAe,KAClCkC,UAAU,EACVtH,MAAO,OAIX,EAAyD4E,mBAAS/E,GAAlE,mBAAOQ,EAAP,KAAcyE,EAAd,KACA,EAAgGF,oBAC9F,GADF,mBAAO2C,EAAP,KAAoBC,EAApB,KAIMC,EAAgB,SAACC,EAA0B7F,GAC/C,IAAMyF,EC7EH,SAAiBzF,GACtB,OAA+B,IAAxBA,EAAM8F,OAAOzF,OD4ED0F,CAAQ/F,GACnB7B,EAAQsH,EAAW,0BAA4B,KACrDxC,GAAS,SAACuB,GAAD,mBAAC,eACLA,GADI,kBAENqB,EAAQ,CAAE7F,QAAOyF,WAAUtH,eAI1B6H,EAAS,WAAO,IAAD,MACb/G,GAAK,UAAAT,EAAMgH,mBAAN,eAAmBvG,KAAM,KAC9BkD,GAAU,UAAA3D,EAAM2D,eAAN,eAAenC,QAAS,GAClCuD,GAAc,UAAA/E,EAAM+E,mBAAN,eAAmBvD,QAAS,GAEhD,GAAI0F,EAAa,CACf,IAAM9G,EExFL,SAAoBK,EAAmBkD,EAAiBoB,GAC7D,MAAO,CACLtE,GAAIA,GAAMgH,cACV3D,UAAWD,KAAK6D,MAChB/D,QAASA,EAAQ2D,OACjBvC,YAAaA,EACbC,KAAM,IFkFS2C,CAAWlH,EAAIkD,EAASoB,GACrC5C,EAAMqF,OAAOpH,GACbqE,GAAS,SAACuB,GAAD,mBAAC,eACLA,GADI,IAEPrC,QAAQ,2BAAMqC,EAAUrC,SAAjB,IAA0BnC,MAAOpB,EAAKuD,UAC7CoB,YAAY,2BAAMiB,EAAUjB,aAAjB,IAA8BvD,MAAOpB,EAAK2E,cACrDiC,YAAa5G,SAabwH,GAAe,IAAIpB,IAAsBgB,OAAOA,GAAQK,UAR7C,WACf1F,EAAM0F,cAOyEC,QAE3EC,EAAY,SAAChF,GACjB6E,EAAa7E,IAkBf,OAfAiF,qBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWH,GAC9B,WACLE,SAASE,oBAAoB,UAAWJ,OAI5CC,qBAAU,WAAO,IAAD,MACRI,EAAuC,OAAxBpI,EAAM2D,QAAQnC,QAAmBxB,EAAM2D,QAAQsD,SAC9DoB,EAA+C,OAA5BrI,EAAM+E,YAAYvD,QAAmBxB,EAAM+E,YAAYkC,SAC1EqB,GAAiB,UAAAtI,EAAM2D,QAAQnC,aAAd,eAAqB8F,WAArB,UAAgCtH,EAAMgH,mBAAtC,aAAgC,EAAmBrD,SACpE4E,EAAqBvI,EAAM+E,YAAYvD,SAAlB,UAA4BxB,EAAMgH,mBAAlC,aAA4B,EAAmBjC,aAC1EoC,EAAeiB,GAAgBC,IAAqBC,GAAkBC,MACrE,CAACvI,IAGF,mCACE,uBAAMwI,UAAWrG,EAAMqG,UAAWC,YAAU,EAACtF,aAAa,MAAMuF,SA3BnD,SAAC3F,GAChBA,EAAM+D,kBA0BJ,UACE,8BACE,cAAC6B,EAAA,EAAD,CACElI,GAAG,UACHmI,MAAM,UACNC,QAAQ,WACRrH,MAAOxB,EAAM2D,QAAQnC,OAAS,GAC9BqB,WAAS,EACTC,SAAU,SAACC,GAAD,OAA0CqE,EAAc,UAAWrE,EAAME,OAAOzB,QAC1F7B,MAAOK,EAAM2D,QAAQsD,SACrB6B,WAAY9I,EAAM2D,QAAQhE,UAG9B,8BACE,cAACgJ,EAAA,EAAD,CACElI,GAAG,cACHmI,MAAM,cACNC,QAAQ,WACRrH,MAAOxB,EAAM+E,YAAYvD,OAAS,GAClCuH,WAAS,EACTC,KAAM,GACNlG,SAAU,SAACC,GAAD,OAA0CqE,EAAc,cAAerE,EAAME,OAAOzB,QAC9F7B,MAAOK,EAAM+E,YAAYkC,SACzB6B,WAAY9I,EAAM+E,YAAYpF,UAGlC,8BACE,cAACsJ,EAAA,EAAD,CACEC,UAAWhC,EACX3D,QAASiE,EACTqB,QAAQ,YACRM,MAAM,UACNC,KAAK,QACLC,UAAW,cAACC,EAAA,EAAD,IANb,2BAtJ0BpH,CAAA,QAAD,qNAMrB,SAACC,GAAD,OAA8BA,EAAMoH,MAAMC,QAAQ,EAAG,EAAG,OGT/D,SAASC,KACd,IAAM/E,EAAUC,cAEVrF,EAAWyG,cAWjB,OACE,qCACE,iDACA,cAACgB,GAAD,CAAYS,OAZD,SAACpH,GACdd,ETuBG,SAAiBc,GACtB,IAAMD,EAA4B,CAChCd,KAAMH,EACNkB,KAAMA,GAGR,OAAO,SAACd,EAA4BC,GAClCD,EAASa,GAETzB,EADyBa,MS/BhBmK,CAAQtJ,IACjBsE,EAAQjD,QAAR,sBAA+BrB,EAAKK,MAUNoH,SAPf,WACfnD,EAAQiF,e,0BCTCC,GAAa3H,YAAUC,aAkBpC,SAA6BC,GAC3B,IAAMyF,GAAe,IAAIpB,IAAsBqD,OAAO1H,EAAM0H,QAAQ/B,QAE9DC,EAAY,SAAChF,GACjB6E,EAAa7E,IAUf,OAPAiF,qBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWH,GAC9B,WACLE,SAASE,oBAAoB,UAAWJ,OAK1C,sBAAKS,UAAWrG,EAAMqG,UAAtB,UACE,6BAAKrG,EAAM/B,KAAKuD,UAChB,cAAC,KAAD,UAAWxB,EAAM/B,KAAK2E,cACtB,8BACE,cAACkE,EAAA,EAAD,CAAQ1F,QAASpB,EAAM0H,OAAQhB,QAAQ,YAAYM,MAAM,UAAUC,KAAK,QAAQC,UAAW,cAACS,GAAA,EAAD,IAA3F,yBArC4B5H,CAAA,QAAD,0ECS5B,SAAS6H,GAAa5H,GAC3B,IAAM6H,EAAcC,cAEdtL,EAAgBsC,GAAe,SAACjB,GAAD,OACnCA,EAAMrB,MAAMiC,QAAO,SAACR,GAAD,OAAgBA,EAAKK,KAAOuJ,EAAYE,aAS7D,OAAO,mCAAoB,IAAjBvL,EAAMkD,OAAe,cAAC+H,GAAD,CAAYxJ,KAAMzB,EAAM,GAAIkL,OAN5C,WACQ,IAAjBlL,EAAMkD,QACRM,EAAM0H,OAAOlL,EAAM,GAAG8B,OAIsD,O,2BCzBrE0J,GAAiBlI,YAAUC,aAoBxC,SAAiCC,GAC/B,IAAMoB,EAAUpB,EAAMoB,SAAY,aAElC,OACE,cAAC6G,GAAA,EAAD,CAAK5B,UAAWrG,EAAMqG,UAAWW,MAAM,UAAU,aAAW,MAAM5F,QAASA,EAA3E,SACE,cAAC8G,GAAA,EAAD,QAzBkCnI,CAAA,QAAD,yGAG3B,SAACC,GAAD,OAAoD,GAA0B,IAApBA,EAAM7B,OAAS,OCE9E,SAASgK,KACd,IAAM5F,EAAUC,cAEVqF,EAAcC,cAEdtL,EAAgBsC,GAAe,SAACjB,GAAD,OACnCA,EAAMrB,MAAMiC,QAAO,SAACR,GAAD,OAAgBA,EAAKK,KAAOuJ,EAAYE,aAGvD5K,EAAWyG,cAUjB,OACE,qCACE,2CACkB,IAAjBpH,EAAMkD,OAAe,cAACkF,GAAD,CAAYS,OAXvB,SAACpH,GACdd,Eb0BG,SAAoBc,GACzB,IAAMhB,EAA4B,CAChCC,KAAMH,EACNkB,KAAMA,GAGR,OAAO,SAACd,EAAgCC,GACtCD,EAASF,GAETV,EADyBa,MalChBgL,CAAWnK,KAUgCyH,SAPrC,WACfnD,EAAQuB,KAAK,MAM2D7F,KAAMzB,EAAM,KAAS,Q,oCC5BpF6L,GAASvI,YAAUC,aAoBhC,SAAyBC,GACvB,OACE,cAAC,KAAD,CAAaqG,UAAWrG,EAAMqG,UAAWlG,SAAS,SAAlD,SACE,eAACmI,GAAA,EAAD,WACGtI,EAAMuI,SACP,cAACC,GAAA,EAAD,CAAY9B,QAAQ,KAApB,SAA0B1G,EAAMyI,eAzBR1I,CAAA,QAAD,oFCHxB,SAAe2I,GAAtB,mC,8CAAO,WAA2BC,GAA3B,SAAAC,EAAA,+EACE,IAAIC,SAAmB,SAACC,GAAD,OAAaC,GAAaJ,EAAMG,OADzD,4C,sBAIP,SAASC,GAAaJ,EAAYG,GAChC,IAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IAAMC,EAQV,SAAqB1M,GACnB,GAAa,OAATA,EACF,MAAO,GAET,GAAIA,aAAgB2M,YAClB,OAAO,IAAIC,aAAcC,OAAO7M,GAElC,OAAOA,EAfoB8M,CAAYP,EAAOQ,QACtCC,EAAgB/M,KAAKa,MAAM4L,GACjCL,EAAQW,IAGVT,EAAOU,WAAWf,G,oCCPPgB,GAAa7J,YAAUC,aAgBpC,SAA6BC,GAC3B,MAA4BoC,mBAA6B,MAAzD,mBAAOwH,EAAP,KAAeC,EAAf,KAMMC,EAAc,WAClBD,EAAU,OAQNE,EAAY/J,EAAMgK,QAAQ5K,KAAI,SAAC6K,EAAwB9L,GAAzB,OAClC,cAAC+L,GAAA,EAAD,CAAqC9I,QAAS,kBAAM+I,EAASF,EAAWnM,eAJxEgM,KAIA,SACGG,EAAWxB,OADd,oBAA4BtK,OAK9B,OACE,sBAAKkI,UAAWrG,EAAMqG,UAAtB,UACE,cAACtE,EAAA,EAAD,CAAYX,QArBG,SAACR,GAClBiJ,EAAUjJ,EAAMwJ,gBAoBmBpI,KAAK,QAAQgF,MAAM,UAAU,aAAW,OAAzE,SACE,cAAC,KAAD,MAGD+C,EAAUrK,OAAS,EAClB,cAAC2K,GAAA,EAAD,CAAM/L,GAAG,WAAWgM,SAAUV,EAAQW,aAAW,EAACC,OAAQZ,EAAQa,QAASX,EAA3E,SACGC,IAED,UAhD0BhK,CAAA,QAAD,+DAEf,SAACC,GAAD,OAA8BA,EAAMoH,MAAMC,QAAQ,O,iBCHzDqD,GAAa5K,YAAUC,aAgBpC,SAA6BC,GAC3B,OACE,qBAAKqG,UAAWrG,EAAMqG,UAAtB,SACE,cAACtE,EAAA,EAAD,CAAYX,QAASpB,EAAM2K,OAAQ3I,KAAK,QAAQgF,MAAM,UAAU,aAAW,OAA3E,SACE,cAAC,KAAD,UApB4BjH,CAAA,QAAD,+DAEf,SAACC,GAAD,OAA8BA,EAAMoH,MAAMC,QAAQ,OCQ/D,SAASuD,KACd,IAAMzN,EjBD4ByG,ciBE5BiH,EAAYC,YAAc,KAC1BvI,EAAUC,cAOVuI,EAAYC,iBAAgC,MAM5CC,EAAY,uCAAG,WAAOrK,GAAP,mBAAAgI,EAAA,yDAEN,QADPD,GAAoB,UAAA/H,EAAME,OAAOoK,aAAb,eAAqB,KAAM,MADlC,gCAGcxC,GAAYC,GAH1B,OAGX9K,EAHW,OAIjBV,EAASH,EAASa,EAAMrB,QAJP,2CAAH,sDAQZ2O,EAA4B,CAChC,CAAE1C,MAAO,SAAU3K,OApBA,YHMhB,SAAqBD,GAC1B,IAAM4L,EAAmB/M,KAAKC,UAAUkB,GAClCuN,EAAO,IAAIC,KAAK,CAAC5B,GAAW,CAAEvM,KAAM,qBACpCoO,EAAMC,IAAIC,gBAAgBJ,GAC1BK,EAAO3F,SAAS4F,cAAc,KACpCD,EAAKE,SAAW,iBAChBF,EAAKG,KAAON,EACZG,EAAKI,QGXHC,CADyBpO,EAAMN,cAoB/B,CAAEqL,MAAO,SAAU3K,OAdA,WAAO,IAAD,EACzB,UAAAiN,EAAUgB,eAAV,SAAmBF,WA4BfG,EAAa,SAACC,IAClB,OAAIpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAWqB,SACb3J,EAAQuB,KAAKmI,GAEb1J,EAAQjD,QAAQ2M,IAIpB,OACE,qCACE,cAAC,GAAD,CAAQxD,MAAM,YAAd,UACY,OAAToC,QAAS,IAATA,OAAA,EAAAA,EAAWqB,SAAU,cAACvC,GAAD,CAAYK,QAASmB,IAAkB,cAACT,GAAD,CAAYC,OAvBhE,WACbpI,EAAQiF,cAwBN,uBACEtK,KAAK,OACLiP,IAAKpB,EACLqB,OAAQ,0BACRzL,SAAUsK,EACVoB,MAAO,CAAEC,QAAS,UAGpB,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACxE,GAAD,CAAgB5G,QA9BL,WACf4K,EAAW,cA+BP,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,KAAK,UAAZ,SACE,cAACnF,GAAD,MAEF,cAAC,IAAD,CAAOmF,KAAK,sBAAZ,SACE,cAACtE,GAAD,MAEF,cAAC,IAAD,CAAOsE,KAAK,sBAAZ,SACE,cAAC7E,GAAD,CAAcF,OApCT,SAACK,GACdiE,EAAW,eAAD,OAAgBjE,SAqCpB,cAAC,IAAD,CAAO0E,KAAK,IAAZ,SACE,cAACtK,EAAD,eC1FL,ICUiBuK,GDVQC,G,6BCQhCC,IAASC,QAEeH,GAFO,cAAC9B,GAAD,IAI3B,eAAC,aAAD,WACE,cAACkC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,cAAC,IAAD,CAAUtP,MAAOA,EAAjB,SACE,cAAC,KAAD,CAAeuP,SAAUC,iBAAzB,SAAkDR,aARnB5G,SAASqH,eAAe,SDP3DR,IACF,8BAAqBS,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOV,IACPW,EAAOX,IACPY,EAAOZ,IACPa,EAAOb,IACPc,EAAQd,S","file":"static/js/main.0f57d8ca.chunk.js","sourcesContent":["import { Dump } from '../types/dump-types'\n\nconst LocalStorageKey = {\n  DUMPS: 'dumps',\n}\n\nexport function findAllDumps(): Dump[] {\n  const data: string | null = window.localStorage.getItem(LocalStorageKey.DUMPS)\n  if (data === null) {\n    return []\n  }\n\n  try {\n    const jsonData = JSON.parse(data)\n    return jsonData.dumps\n  } catch (error) {\n    return []\n  }\n}\n\nexport function postDumps(dumps: Dump[]): void {\n  const data = JSON.stringify(dumps)\n  window.localStorage.setItem(LocalStorageKey.DUMPS, data)\n}\n","import { Action, Dispatch } from '@reduxjs/toolkit'\nimport { Dump } from '../types/dump-types'\nimport { findAllDumps, postDumps } from '../services/dump-service'\n\nexport type GetState<T> = () => T\n\ninterface DumpListAction extends Action {\n  type: string\n  dumps: Dump[]\n}\n\ninterface DumpAction extends Action {\n  type: string\n  dump: Dump\n}\n\nconst DumpActionType = {\n  SET_DUMPS: 'SET_DUMPS',\n  ADD_DUMP: 'ADD_DUMP',\n  UPDATE_DUMP: 'UPDATE_DUMP',\n  REMOVE_DUMP: 'REMOVE_DUMP',\n}\n\nexport function setDumps(dumps: Dump[]): any {\n  const setDumpAction: DumpListAction = {\n    type: DumpActionType.SET_DUMPS,\n    dumps: dumps,\n  }\n\n  return (dispatch: Dispatch<Action>, getState: GetState<Dump[]>): void => {\n    dispatch(setDumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nexport function addDump(dump: Dump): any {\n  const addDumpAction: DumpAction = {\n    type: DumpActionType.ADD_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<Action>, getState: GetState<Dump[]>): void => {\n    dispatch(addDumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nexport function updateDump(dump: Dump): any {\n  const setDumpAction: DumpAction = {\n    type: DumpActionType.UPDATE_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<DumpAction>, getState: GetState<Dump[]>): void => {\n    dispatch(setDumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nexport function removeDump(dump: Dump): any {\n  const removeDumpAction: DumpAction = {\n    type: DumpActionType.REMOVE_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<DumpAction>, getState: GetState<Dump[]>): void => {\n    dispatch(removeDumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nconst initialState = findAllDumps()\n\nexport function dumpReducer(state: Dump[] = initialState, action: Action): Dump[] {\n  function setDumpsAction(dumps: Dump[]): Dump[] {\n    return [...dumps]\n  }\n\n  function addDumpAction(state: Dump[], dump: Dump): Dump[] {\n    return [...state, dump]\n  }\n\n  function updateDumpAction(state: Dump[], dump: Dump): Dump[] {\n    const index = state.findIndex((d: Dump) => d.id === dump.id)\n    if (index < 0) {\n      return state\n    }\n\n    const newState = [...state]\n    newState[index] = dump\n    return newState\n  }\n\n  function removeDumpAction(state: Dump[], dump: Dump): Dump[] {\n    return state.filter((d: Dump) => d.id !== dump.id)\n  }\n\n  switch (action.type) {\n    case DumpActionType.SET_DUMPS: {\n      const dumpListAction = action as DumpListAction\n      return setDumpsAction(dumpListAction.dumps)\n    }\n    case DumpActionType.ADD_DUMP: {\n      const dumpAction = action as DumpAction\n      return addDumpAction(state, dumpAction.dump)\n    }\n    case DumpActionType.UPDATE_DUMP: {\n      const dumpAction = action as DumpAction\n      return updateDumpAction(state, dumpAction.dump)\n    }\n    case DumpActionType.REMOVE_DUMP:\n      const dumpAction = action as DumpAction\n      return removeDumpAction(state, dumpAction.dump)\n  }\n  return state\n}\n","import { applyMiddleware, combineReducers, createStore } from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport { dumpReducer } from './dump-store'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nexport const store = createStore(\n  combineReducers({\n    dumps: dumpReducer,\n  }),\n  applyMiddleware(thunk)\n)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n","export type SearchHash = string[]\n\nexport function createSearchHash(...values: string[]): SearchHash {\n  type StringSet = { [value: string]: boolean }\n\n  return Object.keys(\n    values\n      .map((value: string) => value.replace(\"'\", ''))\n      .map((value: string) => value.toLowerCase())\n      .flatMap((value: string) => value.split(/[^a-z0-9]/))\n      .filter((value: string) => value.length > 0)\n      .reduce((set: StringSet, value: string) => {\n        set[value] = true\n        return set\n      }, {})\n  )\n}\n\nexport function scoreSearchResult(content: SearchHash, keywords: SearchHash): number {\n  const searchableContent = content.join(';')\n  return keywords.filter((kw: string) => searchableContent.includes(kw)).length\n}\n","import {\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  withTheme,\n} from '@material-ui/core'\nimport React, { ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport { Delete as DeleteIcon, Search as SearchIcon } from '@material-ui/icons'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport PropTypes from 'prop-types'\n\nexport const DumpSearch = withTheme(styled(DumpSearchComponent)``)\n\ninterface SearchProps {\n  dumps: Dump[]\n  onSearchFilterChange: (filter: string) => void\n  onDumpSelection: (dump: Dump) => void\n  onDumpRemoval: (dump: Dump) => void\n}\n\nconst propTypes = {\n  dumps: PropTypes.arrayOf(PropTypes.shape(dumpShape).isRequired).isRequired,\n  onSearchFilterChange: PropTypes.func,\n  onDumpSelection: PropTypes.func,\n  onDumpRemoval: PropTypes.func,\n}\n\nfunction DumpSearchComponent(props: SearchProps) {\n  const onSearchFilterChange = (event: ChangeEvent<HTMLInputElement>) => {\n    props.onSearchFilterChange(event.target.value)\n  }\n\n  const adornment = (\n    <InputAdornment position=\"end\">\n      <SearchIcon />\n    </InputAdornment>\n  )\n\n  const searchForm = (\n    <FormControl>\n      <InputLabel htmlFor=\"search\">Search</InputLabel>\n      <Input id=\"search\" autoFocus onChange={onSearchFilterChange} endAdornment={adornment} autoComplete=\"off\" />\n    </FormControl>\n  )\n\n  const listItems = props.dumps.map((dump: Dump) => (\n    <ListItem key={dump.id} button onClick={() => props.onDumpSelection(dump)}>\n      <ListItemText primary={dump.summary} secondary={new Date(dump.timestamp).toLocaleString()} />\n      <ListItemSecondaryAction onClick={() => props.onDumpRemoval(dump)}>\n        <IconButton edge=\"end\" aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ))\n\n  return (\n    <>\n      {searchForm}\n      {props.dumps.length > 0 ? <List>{listItems}</List> : null}\n    </>\n  )\n}\n\nDumpSearchComponent.propTypes = propTypes\n","import React, { useState } from 'react'\nimport { RootState, useAppSelector } from '../store/store'\nimport { removeDump } from '../store/dump-store'\nimport { createSearchHash, scoreSearchResult } from '../services/search-service'\nimport { DumpSearch } from '../components/dump-search'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { Dump } from '../types/dump-types'\n\ninterface SearchState {\n  filter: string\n  selected: Dump | null\n}\n\ntype SetSearchState = React.Dispatch<React.SetStateAction<SearchState>>\n\nexport function SearchDumpsView() {\n  const initialState: SearchState = {\n    filter: '',\n    selected: null,\n  }\n\n  const [state, setState]: [SearchState, SetSearchState] = useState(initialState)\n\n  const history = useHistory<string>()\n\n  const dumps = useAppSelector((globalState: RootState): Dump[] => {\n    const scores = globalState.dumps.map((dump: Dump) => scoreDump(dump, state.filter))\n    return filterDumps(globalState.dumps, scores)\n  })\n\n  const dispatch = useDispatch<any>()\n\n  const onSearchFilterChange = (filter: string) => {\n    setState((prevState) => ({ ...prevState, filter }))\n  }\n\n  const onDumpSelection = (dump: Dump) => {\n    history.push(`/show/dumps/${dump.id}`)\n  }\n\n  const onDumpRemoval = (dump: Dump) => {\n    dispatch(removeDump(dump))\n  }\n\n  return (\n    <>\n      <h2>Find dumps</h2>\n      <DumpSearch\n        dumps={dumps}\n        onSearchFilterChange={onSearchFilterChange}\n        onDumpSelection={onDumpSelection}\n        onDumpRemoval={onDumpRemoval}\n      />\n    </>\n  )\n}\n\nfunction scoreDump(dump: Dump, filter: string): number {\n  const searchableDump = createSearchHash(dump.summary, dump.description, ...dump.tags)\n  const searchableFilter = createSearchHash(filter)\n  return scoreSearchResult(searchableDump, searchableFilter)\n}\n\nfunction filterDumps(dumps: Dump[], scores: number[]): Dump[] {\n  const maxScore = Math.max(...scores)\n  if (maxScore === 0) {\n    return []\n  }\n\n  const maxIndexes = scores\n    .map((score: number, index: number) => (score === maxScore ? index : -1))\n    .filter((index: number) => index >= 0)\n  return maxIndexes.map((index: number) => dumps[index])\n}\n","interface EventHandler {\n  matcher: (event: KeyboardEvent) => boolean\n  action: () => void\n}\n\nfunction isEditEvent(event: KeyboardEvent): boolean {\n  return event.key === 'e'\n}\n\nfunction isSaveEvent(event: KeyboardEvent): boolean {\n  return event.ctrlKey && event.key === 's'\n}\n\nfunction isCancelEvent(event: KeyboardEvent): boolean {\n  return event.key === 'Escape'\n}\n\nexport class EventHandlerBuilder {\n  constructor(private handlers: EventHandler[] = []) {}\n\n  onEdit(action: () => void): EventHandlerBuilder {\n    this.handlers.push({\n      matcher: isEditEvent,\n      action: action,\n    })\n    return this\n  }\n\n  onSave(action: () => void): EventHandlerBuilder {\n    this.handlers.push({\n      matcher: isSaveEvent,\n      action: action,\n    })\n    return this\n  }\n\n  onCancel(action: () => void): EventHandlerBuilder {\n    this.handlers.push({\n      matcher: isCancelEvent,\n      action: action,\n    })\n    return this\n  }\n\n  build(): (event: KeyboardEvent) => void {\n    return (event: KeyboardEvent) => {\n      const handler: EventHandler[] = this.handlers.filter((h: EventHandler) => h.matcher(event))\n      if (handler.length === 1) {\n        handler[0].action()\n        event.preventDefault()\n      }\n    }\n  }\n}\n","import { Button, TextField, Theme, withTheme } from '@material-ui/core'\nimport styled, { ThemeProps } from 'styled-components'\nimport React, { ChangeEvent, FormEvent, useEffect, useState } from 'react'\nimport { isEmpty } from '../validators/string-validators'\nimport { createDump } from '../services/create-service'\nimport { Save as SaveIcon } from '@material-ui/icons'\nimport { EventHandlerBuilder } from './key-event-handler'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport PropTypes from 'prop-types'\n\nexport const DumpEditor = withTheme(styled(DumpEditorComponent)`\n  div {\n    width: 100%;\n  }\n\n  > div {\n    margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n  }\n\n  > div:last-child {\n    text-align: right;\n  }\n\n  > div > div > div > TextArea {\n    font-family: monospace;\n  }\n`)\n\ninterface DumpEditorProps {\n  className: string\n  dump?: Dump\n  onSave: (dump: Dump) => void\n  onCancel: () => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  dump: PropTypes.shape(dumpShape),\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n}\n\ninterface DumpFieldState {\n  value: string | null\n  hasError: boolean\n  error: string | null\n}\n\ninterface EditorState {\n  currentDump: Dump | null\n  summary: DumpFieldState\n  description: DumpFieldState\n}\n\ntype SetEditorState = React.Dispatch<React.SetStateAction<EditorState>>\n\nfunction DumpEditorComponent(props: DumpEditorProps) {\n  const initialState: EditorState = {\n    currentDump: props.dump || null,\n    summary: {\n      value: props.dump?.summary || null,\n      hasError: false,\n      error: null,\n    },\n    description: {\n      value: props.dump?.description || null,\n      hasError: false,\n      error: null,\n    },\n  }\n\n  const [state, setState]: [EditorState, SetEditorState] = useState(initialState)\n  const [saveEnabled, setSaveEnabled]: [boolean, React.Dispatch<React.SetStateAction<boolean>>] = useState(\n    false as boolean\n  )\n\n  const onFieldChange = (field: keyof EditorState, value: string) => {\n    const hasError = isEmpty(value)\n    const error = hasError ? 'Field must not be empty' : null\n    setState((prevState: EditorState) => ({\n      ...prevState,\n      [field]: { value, hasError, error },\n    }))\n  }\n\n  const onSave = () => {\n    const id = state.currentDump?.id || null\n    const summary = state.summary?.value || ''\n    const description = state.description?.value || ''\n\n    if (saveEnabled) {\n      const dump = createDump(id, summary, description)\n      props.onSave(dump)\n      setState((prevState: EditorState) => ({\n        ...prevState,\n        summary: { ...prevState.summary, value: dump.summary },\n        description: { ...prevState.description, value: dump.description },\n        currentDump: dump,\n      }))\n    }\n  }\n\n  const onCancel = () => {\n    props.onCancel()\n  }\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n  }\n\n  const eventHandler = new EventHandlerBuilder().onSave(onSave).onCancel(onCancel).build()\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    eventHandler(event)\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown)\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n    }\n  })\n\n  useEffect(() => {\n    const validSummary = state.summary.value !== null && !state.summary.hasError\n    const validDescription = state.description.value !== null && !state.description.hasError\n    const summaryChanged = state.summary.value?.trim() !== state.currentDump?.summary\n    const descriptionChanged = state.description.value !== state.currentDump?.description\n    setSaveEnabled(validSummary && validDescription && (summaryChanged || descriptionChanged))\n  }, [state])\n\n  return (\n    <>\n      <form className={props.className} noValidate autoComplete=\"off\" onSubmit={onSubmit}>\n        <div>\n          <TextField\n            id=\"summary\"\n            label=\"Summary\"\n            variant=\"outlined\"\n            value={state.summary.value || ''}\n            autoFocus\n            onChange={(event: ChangeEvent<HTMLInputElement>) => onFieldChange('summary', event.target.value)}\n            error={state.summary.hasError}\n            helperText={state.summary.error}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            variant=\"outlined\"\n            value={state.description.value || ''}\n            multiline\n            rows={12}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => onFieldChange('description', event.target.value)}\n            error={state.description.hasError}\n            helperText={state.description.error}\n          />\n        </div>\n        <div>\n          <Button\n            disabled={!saveEnabled}\n            onClick={onSave}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<SaveIcon />}\n          >\n            Save\n          </Button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nDumpEditorComponent.propTypes = propTypes\n","export function isEmpty(value: string): boolean {\n  return value.trim().length === 0\n}\n","import { v4 as uuid4 } from 'uuid'\nimport { Dump } from '../types/dump-types'\n\nexport function createDump(id: string | null, summary: string, description: string): Dump {\n  return {\n    id: id || uuid4(),\n    timestamp: Date.now(),\n    summary: summary.trim(),\n    description: description,\n    tags: [],\n  }\n}\n","import { DumpEditor } from '../components/dump-editor'\nimport { addDump } from '../store/dump-store'\nimport { useHistory } from 'react-router-dom'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Dump } from '../types/dump-types'\n\nexport function CreateDumpView() {\n  const history = useHistory<string>()\n\n  const dispatch = useDispatch<any>()\n\n  const onSave = (dump: Dump) => {\n    dispatch(addDump(dump))\n    history.replace(`/edit/dumps/${dump.id}`)\n  }\n\n  const onCancel = () => {\n    history.goBack()\n  }\n\n  return (\n    <>\n      <h2>Create new dump</h2>\n      <DumpEditor onSave={onSave} onCancel={onCancel} />\n    </>\n  )\n}\n","import { Button, withTheme } from '@material-ui/core'\nimport styled from 'styled-components'\nimport React, { useEffect } from 'react'\nimport { Edit as EditIcon } from '@material-ui/icons'\nimport { EventHandlerBuilder } from './key-event-handler'\nimport Markdown from 'react-markdown'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport PropTypes from 'prop-types'\n\nexport const DumpWidget = withTheme(styled(DumpWidgetComponent)`\n  > div:last-child {\n    text-align: right;\n  }\n`)\n\ninterface DumpProps {\n  className: string\n  dump: Dump\n  onEdit: () => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  dump: PropTypes.shape(dumpShape).isRequired,\n  onEdit: PropTypes.func,\n}\n\nfunction DumpWidgetComponent(props: DumpProps) {\n  const eventHandler = new EventHandlerBuilder().onEdit(props.onEdit).build()\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    eventHandler(event)\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown)\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n    }\n  })\n\n  return (\n    <div className={props.className}>\n      <h2>{props.dump.summary}</h2>\n      <Markdown>{props.dump.description}</Markdown>\n      <div>\n        <Button onClick={props.onEdit} variant=\"contained\" color=\"primary\" size=\"large\" startIcon={<EditIcon />}>\n          Edit\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nDumpWidgetComponent.propTypes = propTypes\n","import { useParams } from 'react-router-dom'\nimport { RootState, useAppSelector } from '../store/store'\nimport { DumpWidget } from '../components/dump-widget'\nimport { Dump } from '../types/dump-types'\nimport PropTypes from 'prop-types'\n\ninterface ShowDumpViewProps {\n  onEdit: (dumpId: string) => void\n}\n\nconst propTypes = {\n  onEdit: PropTypes.func.isRequired,\n}\n\ninterface ShowDumpRouteParams {\n  dumpId: string\n}\n\nexport function ShowDumpView(props: ShowDumpViewProps) {\n  const routeParams = useParams<ShowDumpRouteParams>()\n\n  const dumps: Dump[] = useAppSelector((state: RootState) =>\n    state.dumps.filter((dump: Dump) => dump.id === routeParams.dumpId)\n  )\n\n  const onEdit = () => {\n    if (dumps.length === 1) {\n      props.onEdit(dumps[0].id)\n    }\n  }\n\n  return <>{dumps.length === 1 ? <DumpWidget dump={dumps[0]} onEdit={onEdit} /> : null}</>\n}\n\nShowDumpView.propTypes = propTypes\n","import { Fab, Theme, withTheme } from '@material-ui/core'\nimport { Add as AddIcon } from '@material-ui/icons'\nimport React from 'react'\nimport styled, { ThemeProps } from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport const FloatingButton = withTheme(styled(FloatingButtonComponent)`\n  position: fixed;\n  top: auto;\n  bottom: ${(props: FloatingButtonProps & ThemeProps<Theme>) => 30 + (props.index || 0) * 70}px;\n  left: auto;\n  right: 30px;\n`)\n\ninterface FloatingButtonProps {\n  className: string\n  index?: number\n  onClick?: () => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n}\n\nfunction FloatingButtonComponent(props: FloatingButtonProps) {\n  const onClick = props.onClick || (() => undefined)\n\n  return (\n    <Fab className={props.className} color=\"primary\" aria-label=\"add\" onClick={onClick}>\n      <AddIcon />\n    </Fab>\n  )\n}\n\nFloatingButtonComponent.propTypes = propTypes\n","import { DumpEditor } from '../components/dump-editor'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { RootState, useAppSelector } from '../store/store'\nimport { updateDump } from '../store/dump-store'\nimport { useDispatch } from 'react-redux'\nimport { Dump } from '../types/dump-types'\n\nexport interface EditDumpRouteParams {\n  dumpId: string\n}\n\nexport function EditDumpView() {\n  const history = useHistory<string>()\n\n  const routeParams = useParams<EditDumpRouteParams>()\n\n  const dumps: Dump[] = useAppSelector((state: RootState) =>\n    state.dumps.filter((dump: Dump) => dump.id === routeParams.dumpId)\n  )\n\n  const dispatch = useDispatch<any>()\n\n  const onSave = (dump: Dump) => {\n    dispatch(updateDump(dump))\n  }\n\n  const onCancel = () => {\n    history.push('/')\n  }\n\n  return (\n    <>\n      <h2>Edit Dump</h2>\n      {dumps.length === 1 ? <DumpEditor onSave={onSave} onCancel={onCancel} dump={dumps[0]} /> : null}\n    </>\n  )\n}\n","import { AppBar as ReactAppBar, Toolbar, Typography, withTheme } from '@material-ui/core'\nimport styled from 'styled-components'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AppBar = withTheme(styled(AppBarComponent)`\n  flex-grow: 1;\n\n  & > div > h6 {\n    flex-grow: 1;\n  }\n`)\n\ninterface AppBarProps {\n  className: string\n  title: string\n  children: JSX.Element\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nfunction AppBarComponent(props: AppBarProps): JSX.Element {\n  return (\n    <ReactAppBar className={props.className} position=\"sticky\">\n      <Toolbar>\n        {props.children}\n        <Typography variant=\"h6\">{props.title}</Typography>\n      </Toolbar>\n    </ReactAppBar>\n  )\n}\n\nAppBarComponent.propTypes = propTypes\n","import { RootState } from '../store/store'\n\nexport async function importState(file: File): Promise<RootState> {\n  return new Promise<RootState>((resolve) => _importDumps(file, resolve))\n}\n\nfunction _importDumps(file: File, resolve: (result: RootState) => void): void {\n  const reader = new FileReader()\n  reader.onload = () => {\n    const fileData: string = _decodeData(reader.result)\n    const jsonData: any = JSON.parse(fileData)\n    resolve(jsonData)\n  }\n\n  reader.readAsText(file)\n}\n\nfunction _decodeData(data: string | ArrayBuffer | null): string {\n  if (data === null) {\n    return ''\n  }\n  if (data instanceof ArrayBuffer) {\n    return new TextDecoder().decode(data)\n  }\n  return data\n}\n\nexport function exportState(state: RootState): void {\n  const jsonData: string = JSON.stringify(state)\n  const blob = new Blob([jsonData], { type: 'application/json' })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.download = 'braindump.json'\n  link.href = url\n  link.click()\n}\n","import { IconButton, Menu, MenuItem, Theme, withTheme } from '@material-ui/core'\nimport { Menu as MenuIcon } from '@material-ui/icons'\nimport React, { MouseEvent, useState } from 'react'\nimport { MenuAction, menuActionShape } from '../../types/menu-action-types'\nimport styled, { ThemeProps } from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport const MenuButton = withTheme(styled(MenuButtonComponent)`\n  button {\n    margin-right: ${(props: ThemeProps<Theme>) => props.theme.spacing(2)};\n  }\n`)\n\ninterface MenuButtonProps {\n  className: string\n  actions: MenuAction[]\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  actions: PropTypes.arrayOf(PropTypes.shape(menuActionShape).isRequired).isRequired,\n}\n\nfunction MenuButtonComponent(props: MenuButtonProps) {\n  const [anchor, setAnchor] = useState<HTMLElement | null>(null)\n\n  const onMenuOpen = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchor(event.currentTarget)\n  }\n\n  const onMenuClose = () => {\n    setAnchor(null)\n  }\n\n  const onAction = (action: () => void) => {\n    action()\n    onMenuClose()\n  }\n\n  const menuItems = props.actions.map((menuAction: MenuAction, index: number) => (\n    <MenuItem key={`menu-item-${index}`} onClick={() => onAction(menuAction.action)}>\n      {menuAction.title}\n    </MenuItem>\n  ))\n\n  return (\n    <div className={props.className}>\n      <IconButton onClick={onMenuOpen} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n\n      {menuItems.length > 0 ? (\n        <Menu id=\"app-menu\" anchorEl={anchor} keepMounted open={!!anchor} onClose={onMenuClose}>\n          {menuItems}\n        </Menu>\n      ) : null}\n    </div>\n  )\n}\n\nMenuButtonComponent.propTypes = propTypes\n","import { ArrowBack as BackIcon } from '@material-ui/icons'\nimport { IconButton, Theme, withTheme } from '@material-ui/core'\nimport React from 'react'\nimport styled, { ThemeProps } from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport const BackButton = withTheme(styled(BackButtonComponent)`\n  button {\n    margin-right: ${(props: ThemeProps<Theme>) => props.theme.spacing(2)};\n  }\n`)\n\ninterface BackButtonProps {\n  className: string\n  onBack: () => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  onBack: PropTypes.func.isRequired,\n}\n\nfunction BackButtonComponent(props: BackButtonProps) {\n  return (\n    <div className={props.className}>\n      <IconButton onClick={props.onBack} edge=\"start\" color=\"inherit\" aria-label=\"back\">\n        <BackIcon />\n      </IconButton>\n    </div>\n  )\n}\n\nBackButtonComponent.propTypes = propTypes\n","import React, { ChangeEvent, useRef } from 'react'\nimport { Route, Switch, useHistory, useRouteMatch } from 'react-router-dom'\nimport { SearchDumpsView } from './views/search-dumps-view'\nimport { Container } from '@material-ui/core'\nimport { RootState, store, useAppDispatch } from './store/store'\nimport { CreateDumpView } from './views/create-dump-view'\nimport { ShowDumpView } from './views/show-dump-view'\nimport { FloatingButton } from './components/floating-button'\nimport { EditDumpView } from './views/edit-dump-view'\nimport { AppBar } from './components/header/app-bar'\nimport { exportState, importState } from './services/import-export-service'\nimport { setDumps } from './store/dump-store'\nimport { MenuAction } from './types/menu-action-types'\nimport { MenuButton } from './components/header/menu-button'\nimport { BackButton } from './components/header/back-button'\n\nexport function App() {\n  const dispatch = useAppDispatch()\n  const homeMatch = useRouteMatch('/')\n  const history = useHistory<string>()\n\n  const exportAction = () => {\n    const state: RootState = store.getState()\n    exportState(state)\n  }\n\n  const inputFile = useRef<HTMLInputElement | null>(null)\n\n  const importAction = () => {\n    inputFile.current?.click()\n  }\n\n  const onFileChoice = async (event: ChangeEvent<HTMLInputElement>) => {\n    const file: File | null = event.target.files?.[0] || null\n    if (file !== null) {\n      const state: RootState = await importState(file)\n      dispatch(setDumps(state.dumps))\n    }\n  }\n\n  const menuActions: MenuAction[] = [\n    { title: 'Export', action: exportAction },\n    { title: 'Import', action: importAction },\n  ]\n\n  const onBack = () => {\n    history.goBack()\n  }\n\n  const onCreate = () => {\n    navigateTo('/create')\n  }\n\n  const onEdit = (dumpId: string) => {\n    navigateTo(`/edit/dumps/${dumpId}`)\n  }\n\n  const navigateTo = (route: string) => {\n    if (homeMatch?.isExact) {\n      history.push(route)\n    } else {\n      history.replace(route)\n    }\n  }\n\n  return (\n    <>\n      <AppBar title=\"Braindump\">\n        {homeMatch?.isExact ? <MenuButton actions={menuActions} /> : <BackButton onBack={onBack} />}\n      </AppBar>\n      <input\n        type=\"file\"\n        ref={inputFile}\n        accept={'application/json, .json'}\n        onChange={onFileChoice}\n        style={{ display: 'none' }}\n      />\n\n      <Container maxWidth=\"xl\">\n        <FloatingButton onClick={onCreate} />\n\n        <Switch>\n          <Route path=\"/create\">\n            <CreateDumpView />\n          </Route>\n          <Route path=\"/edit/dumps/:dumpId\">\n            <EditDumpView />\n          </Route>\n          <Route path=\"/show/dumps/:dumpId\">\n            <ShowDumpView onEdit={onEdit} />\n          </Route>\n          <Route path=\"/\">\n            <SearchDumpsView />\n          </Route>\n        </Switch>\n      </Container>\n    </>\n  )\n}\n","import { ReportHandler } from 'web-vitals'\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport { reportWebVitals } from './reportWebVitals'\nimport { CssBaseline, StylesProvider } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(withAppContext(<App />), document.getElementById('root'))\n\nfunction withAppContext(element: JSX.Element): JSX.Element {\n  return (\n    <StrictMode>\n      <CssBaseline />\n      <StylesProvider injectFirst>\n        <Provider store={store}>\n          <BrowserRouter basename={process.env.PUBLIC_URL}>{element}</BrowserRouter>\n        </Provider>\n      </StylesProvider>\n    </StrictMode>\n  )\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}