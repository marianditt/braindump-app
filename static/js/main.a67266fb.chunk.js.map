{"version":3,"sources":["store/dumps.ts","store/store.ts","services/search-service.ts","components/search-dumps-component.tsx","views/search-dumps-view.tsx","components/key-event-handler.ts","components/edit-dump-component.tsx","validators/string-validators.ts","services/create-service.ts","views/create-dump-view.tsx","components/show-dump-component.tsx","views/show-dump-view.tsx","components/floating-button.tsx","views/edit-dump-view.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DumpActionType","initialState","value","localStorage","getItem","JSON","parse","dumps","loadInitialState","store","createStore","combineReducers","state","action","addDumpAction","dump","setDumpAction","index","findIndex","d","id","newState","removeDumpAction","filter","type","applyMiddleware","thunk","useAppSelector","useSelector","createSearchHash","values","Object","keys","map","replace","toLowerCase","flatMap","split","length","reduce","set","SearchDumpsComponent","withTheme","styled","props","adornment","InputAdornment","position","Search","searchForm","FormControl","InputLabel","htmlFor","Input","autoFocus","onChange","event","onSearchFilterChange","target","endAdornment","autoComplete","listItems","ListItem","button","onClick","onDumpSelection","ListItemText","primary","summary","secondary","Date","timestamp","toLocaleString","ListItemSecondaryAction","onDumpRemoval","IconButton","edge","Delete","List","SearchDumpsView","useState","selected","setState","history","useHistory","globalState","scores","searchableDump","description","tags","searchableFilter","content","keywords","searchableContent","join","kw","includes","scoreSearchResult","scoreDump","maxScore","Math","max","score","filterDumps","dispatch","useDispatch","prevState","push","getState","setItem","stringify","removeDump","isEditEvent","key","isSaveEvent","ctrlKey","isCancelEvent","EventHandlerBuilder","handlers","this","matcher","handler","h","preventDefault","EditDumpComponent","currentDump","hasError","error","saveEnabled","setSaveEnabled","onFieldChange","field","trim","isEmpty","onSave","uuid4","now","createDump","eventHandler","onCancel","build","onKeyDown","useEffect","document","addEventListener","removeEventListener","validSummary","validDescription","summaryChanged","descriptionChanged","className","noValidate","onSubmit","TextField","label","variant","helperText","multiline","rows","Button","disabled","color","size","startIcon","Save","theme","spacing","CreateDumpView","addDump","ShowDumpComponent","onEdit","Edit","ShowDumpView","routeParams","useParams","dumpId","FloatingButton","Fab","Add","EditDumpView","setDump","App","element","Container","maxWidth","basename","process","component","Link","to","path","CssBaseline","StylesProvider","injectFirst","onPerfEntry","ReactDOM","render","getElementById","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"iPAeMA,EACM,WADNA,EAEM,WAFNA,EAGS,cAWTC,EARmB,WACvB,IAAMC,EAAQC,aAAaC,QAAQ,SACnC,OAAc,OAAVF,EACK,GAEFG,KAAKC,MAAMJ,GAAOK,MAGNC,G,QCxBRC,EAAQC,YACnBC,YAAgB,CACdJ,MD+DuB,WAA+D,IAA9DK,EAA6D,uDAA7CX,EAAcY,EAA+B,uCACjFC,EAAgB,SAACF,EAAeG,GACpC,MAAM,GAAN,mBAAWH,GAAX,CAAkBG,KAGdC,EAAgB,SAACJ,EAAeG,GACpC,IAAME,EAAQL,EAAMM,WAAU,SAACC,GAAD,OAAaA,EAAEC,KAAOL,EAAKK,MACzD,GAAIH,EAAQ,EACV,OAAOL,EAGT,IAAMS,EAAQ,YAAOT,GAErB,OADAS,EAASJ,GAASJ,EAAOE,KAClBM,GAGHC,EAAmB,SAACV,EAAeG,GACvC,OAAOH,EAAMW,QAAO,SAACJ,GAAD,OAAaA,EAAEC,KAAOL,EAAKK,OAGjD,OAAQP,EAAOW,MACb,KAAKxB,EACH,OAAOc,EAAcF,EAAOC,EAAOE,MACrC,KAAKf,EACH,OAAOgB,EAAcJ,EAAOC,EAAOE,MACrC,KAAKf,EACH,OAAOsB,EAAiBV,EAAOC,EAAOE,MAE1C,OAAOH,KCzFPa,YAAgBC,MAILC,EAAkDC,ICXxD,SAASC,IAAmD,IAAD,uBAA9BC,EAA8B,yBAA9BA,EAA8B,gBAGhE,OAAOC,OAAOC,KACZF,EACGG,KAAI,SAAC/B,GAAD,OAAmBA,EAAMgC,QAAQ,IAAK,OAC1CD,KAAI,SAAC/B,GAAD,OAAmBA,EAAMiC,iBAC7BC,SAAQ,SAAClC,GAAD,OAAmBA,EAAMmC,MAAM,gBACvCd,QAAO,SAACrB,GAAD,OAAmBA,EAAMoC,OAAS,KACzCC,QAAO,SAACC,EAAgBtC,GAEvB,OADAsC,EAAItC,IAAS,EACNsC,IACN,K,yICGIC,EAAuBC,YAAUC,aAS9C,SAAmBC,GACjB,IAIMC,EACJ,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,MAIEC,EACJ,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,oBACA,cAACC,EAAA,EAAD,CAAOjC,GAAG,SAASkC,WAAS,EAACC,SAbJ,SAACC,GAC5BZ,EAAMa,qBAAqBD,EAAME,OAAOxD,QAYuByD,aAAcd,EAAWe,aAAa,WAIjGC,EAAYjB,EAAMrC,MAAM0B,KAAI,SAAClB,GAAD,OAChC,eAAC+C,EAAA,EAAD,CAAwBC,QAAM,EAACC,QAAS,kBAAMpB,EAAMqB,gBAAgBlD,IAApE,UACE,cAACmD,EAAA,EAAD,CAAcC,QAASpD,EAAKqD,QAASC,UAAW,IAAIC,KAAKvD,EAAKwD,WAAWC,mBACzE,cAACC,EAAA,EAAD,CAAyBT,QAAS,kBAAMpB,EAAM8B,cAAc3D,IAA5D,SACE,cAAC4D,EAAA,EAAD,CAAYC,KAAK,MAAM,aAAW,SAAlC,SACE,cAACC,EAAA,EAAD,UAJS9D,EAAKK,OAUtB,OACE,qCACG6B,EACAL,EAAMrC,MAAM+B,OAAS,EAAI,cAACwC,EAAA,EAAD,UAAOjB,IAAoB,UAzCblB,CAAA,IAAD,uBCFtC,SAASoC,IACd,IAKA,EAAyDC,mBALvB,CAChCzD,OAAQ,GACR0D,SAAU,OAGZ,mBAAOrE,EAAP,KAAcsE,EAAd,KAEMC,EAAUC,cAEV7E,EAAQoB,GAAe,SAAC0D,GAC5B,IAAMC,EAASD,EAAY9E,MAAM0B,KAAI,SAAClB,GAAD,OA+BzC,SAAmBA,EAAYQ,GAC7B,IAAMgE,EAAiB1D,EAAgB,WAAhB,GAAiBd,EAAKqD,QAASrD,EAAKyE,aAApC,mBAAoDzE,EAAK0E,QAC1EC,EAAmB7D,EAAiBN,GAC1C,OF1CK,SAA2BoE,EAAqBC,GACrD,IAAMC,EAAoBF,EAAQG,KAAK,KACvC,OAAOF,EAASrE,QAAO,SAACwE,GAAD,OAAgBF,EAAkBG,SAASD,MAAKzD,OEwChE2D,CAAkBV,EAAgBG,GAlCcQ,CAAUnF,EAAMH,EAAMW,WAC3E,OAoCJ,SAAqBhB,EAAe+E,GAClC,IAAMa,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQd,IAC7B,GAAiB,IAAba,EACF,MAAO,GAMT,OAHmBb,EAChBrD,KAAI,SAACqE,EAAerF,GAAhB,OAAmCqF,IAAUH,EAAWlF,GAAS,KACrEM,QAAO,SAACN,GAAD,OAAmBA,GAAS,KACpBgB,KAAI,SAAChB,GAAD,OAAmBV,EAAMU,MA7CtCsF,CAAYlB,EAAY9E,MAAO+E,MAGlCkB,EAAWC,cAcjB,OACE,qCACE,4CACA,cAAChE,EAAD,CACElC,MAAOA,EACPkD,qBAjBuB,SAAClC,GAC5B2D,GAAS,SAACwB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCnF,eAiBrC0C,gBAdkB,SAAClD,GACvBoE,EAAQwB,KAAR,sBAA4B5F,EAAKK,MAc7BsD,cAXgB,SAAC3D,GACrByF,EJgBsB,SAACzF,GACzB,IAAMO,EAA+B,CACnCE,KAAMxB,EACNe,KAAMA,GAGR,OAAO,SAACyF,EAAgCI,GACtCJ,EAASlF,GACT,IAAMD,EAAWuF,IACjBzG,aAAa0G,QAAQ,QAASxG,KAAKyG,UAAUzF,KIzBpC0F,CAAWhG,U,2GCpCxB,SAASiG,EAAYxD,GACnB,MAAqB,MAAdA,EAAMyD,IAGf,SAASC,EAAY1D,GACnB,OAAOA,EAAM2D,SAAyB,MAAd3D,EAAMyD,IAGhC,SAASG,EAAc5D,GACrB,MAAqB,WAAdA,EAAMyD,IAGR,I,EAAMI,GAAb,WACE,aAAoD,IAAhCC,EAA+B,uDAAJ,GAAI,yBAA/BA,WADtB,0CAGE,SAAOzG,GAKL,OAJA0G,KAAKD,SAASX,KAAK,CACjBa,QAASR,EACTnG,OAAQA,IAEH0G,OARX,oBAWE,SAAO1G,GAKL,OAJA0G,KAAKD,SAASX,KAAK,CACjBa,QAASN,EACTrG,OAAQA,IAEH0G,OAhBX,sBAmBE,SAAS1G,GAKP,OAJA0G,KAAKD,SAASX,KAAK,CACjBa,QAASJ,EACTvG,OAAQA,IAEH0G,OAxBX,mBA2BE,WAAyC,IAAD,OACtC,OAAO,SAAC/D,GACN,IAAMiE,EAA0B,EAAKH,SAAS/F,QAAO,SAACmG,GAAD,OAAqBA,EAAEF,QAAQhE,MAC7D,IAAnBiE,EAAQnF,SACVmF,EAAQ,GAAG5G,SACX2C,EAAMmE,uBAhCd,KCRaC,GAAoBlF,YAAUC,aAmC3C,SAAmBC,GAAuB,IAAD,IACjC3C,EAA0B,CAC9B4H,YAAajF,EAAM7B,MAAQ,KAC3BqD,QAAS,CACPlE,OAAO,UAAA0C,EAAM7B,YAAN,eAAYqD,UAAW,KAC9B0D,UAAU,EACVC,MAAO,MAETvC,YAAa,CACXtF,OAAO,UAAA0C,EAAM7B,YAAN,eAAYyE,cAAe,KAClCsC,UAAU,EACVC,MAAO,OAIX,EAAqD/C,mBAAS/E,GAA9D,mBAAOW,EAAP,KAAcsE,EAAd,KACA,EAAgGF,oBAC9F,GADF,mBAAOgD,EAAP,KAAoBC,EAApB,KAIMC,EAAgB,SAACC,EAAwBjI,GAC7C,IAAM4H,ECjEH,SAAiB5H,GACtB,OAA+B,IAAxBA,EAAMkI,OAAO9F,ODgED+F,CAAQnI,GACnB6H,EAAQD,EAAW,0BAA4B,KACrD5C,GAAS,SAACwB,GAAD,mBAAC,eACLA,GADI,kBAENyB,EAAQ,CAAEjI,QAAO4H,WAAUC,eAI1BO,EAAS,WAAO,IAAD,MACblH,GAAK,UAAAR,EAAMiH,mBAAN,eAAmBzG,KAAM,KAC9BgD,GAAU,UAAAxD,EAAMwD,eAAN,eAAelE,QAAS,GAClCsF,GAAc,UAAA5E,EAAM4E,mBAAN,eAAmBtF,QAAS,GAEhD,GAAI8H,EAAa,CACf,IAAMjH,EE5EL,SAAoBK,EAAmBgD,EAAiBoB,GAC7D,MAAO,CACLpE,GAAIA,GAAMmH,cACVhE,UAAWD,KAAKkE,MAChBpE,QAASA,EAAQgE,OACjB5C,YAAaA,EACbC,KAAM,IFsESgD,CAAWrH,EAAIgD,EAASoB,GACrC5C,EAAM0F,OAAOvH,GACbmE,GAAS,SAACwB,GAAD,mBAAC,eACLA,GADI,IAEPtC,QAAQ,2BAAMsC,EAAUtC,SAAjB,IAA0BlE,MAAOa,EAAKqD,UAC7CoB,YAAY,2BAAMkB,EAAUlB,aAAjB,IAA8BtF,MAAOa,EAAKyE,cACrDqC,YAAa9G,SAab2H,GAAe,IAAIrB,IAAsBiB,OAAOA,GAAQK,UAR7C,WACf/F,EAAM+F,cAOyEC,QAE3EC,EAAY,SAACrF,GACjBkF,EAAalF,IAkBf,OAfAsF,qBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWH,GAC9B,WACLE,SAASE,oBAAoB,UAAWJ,OAI5CC,qBAAU,WAAO,IAAD,MACRI,EAAuC,OAAxBtI,EAAMwD,QAAQlE,QAAmBU,EAAMwD,QAAQ0D,SAC9DqB,EAA+C,OAA5BvI,EAAM4E,YAAYtF,QAAmBU,EAAM4E,YAAYsC,SAC1EsB,GAAiB,UAAAxI,EAAMwD,QAAQlE,aAAd,eAAqBkI,WAArB,UAAgCxH,EAAMiH,mBAAtC,aAAgC,EAAmBzD,SACpEiF,EAAqBzI,EAAM4E,YAAYtF,SAAlB,UAA4BU,EAAMiH,mBAAlC,aAA4B,EAAmBrC,aAC1EyC,EAAeiB,GAAgBC,IAAqBC,GAAkBC,MACrE,CAACzI,IAGF,mCACE,uBAAM0I,UAAW1G,EAAM0G,UAAWC,YAAU,EAAC3F,aAAa,MAAM4F,SA3BnD,SAAChG,GAChBA,EAAMmE,kBA0BJ,UACE,8BACE,cAAC8B,EAAA,EAAD,CACErI,GAAG,UACHsI,MAAM,UACNC,QAAQ,WACRzJ,MAAOU,EAAMwD,QAAQlE,OAAS,GAC9BoD,WAAS,EACTC,SAAU,SAACC,GAAD,OAA0C0E,EAAc,UAAW1E,EAAME,OAAOxD,QAC1F6H,MAAOnH,EAAMwD,QAAQ0D,SACrB8B,WAAYhJ,EAAMwD,QAAQ2D,UAG9B,8BACE,cAAC0B,EAAA,EAAD,CACErI,GAAG,cACHsI,MAAM,cACNC,QAAQ,WACRzJ,MAAOU,EAAM4E,YAAYtF,OAAS,GAClC2J,WAAS,EACTC,KAAM,GACNvG,SAAU,SAACC,GAAD,OAA0C0E,EAAc,cAAe1E,EAAME,OAAOxD,QAC9F6H,MAAOnH,EAAM4E,YAAYsC,SACzB8B,WAAYhJ,EAAM4E,YAAYuC,UAGlC,8BACE,cAACgC,EAAA,EAAD,CACEC,UAAWhC,EACXhE,QAASsE,EACTqB,QAAQ,YACRM,MAAM,UACNC,KAAK,QACLC,UAAW,cAACC,EAAA,EAAD,IANb,2BA3IiCzH,CAAA,MAAD,+IAM5B,SAACC,GAAD,OAA8BA,EAAMyH,MAAMC,QAAQ,EAAG,EAAG,OGT/D,SAASC,KACd,IAAMpF,EAAUC,cAEVoB,EAAWC,cAWjB,OACE,qCACE,iDACA,cAACmB,GAAD,CAAmBU,OAZR,SAACvH,GACdyF,ETmBmB,SAACzF,GACtB,IAAMD,EAA4B,CAChCU,KAAMxB,EACNe,KAAMA,GAGR,OAAO,SAACyF,EAAgCI,GACtCJ,EAAS1F,GACT,IAAMO,EAAWuF,IACjBzG,aAAa0G,QAAQ,QAASxG,KAAKyG,UAAUzF,KS5BpCmJ,CAAQzJ,IACjBoE,EAAQwB,KAAR,sBAA4B5F,EAAKK,MAUIuH,SAPtB,WACfxD,EAAQwB,KAAK,W,0BCTJ8D,GAAoB/H,YAAUC,aAY3C,SAAmBC,GACjB,IAAM8F,GAAe,IAAIrB,IAAsBqD,OAAO9H,EAAM8H,QAAQ9B,QAE9DC,EAAY,SAACrF,GACjBkF,EAAalF,IAUf,OAPAsF,qBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWH,GAC9B,WACLE,SAASE,oBAAoB,UAAWJ,OAK1C,sBAAKS,UAAW1G,EAAM0G,UAAtB,UACE,6BAAK1G,EAAM7B,KAAKqD,UAChB,cAAC,KAAD,UAAWxB,EAAM7B,KAAKyE,cACtB,8BACE,cAACuE,EAAA,EAAD,CAAQ/F,QAASpB,EAAM8H,OAAQf,QAAQ,YAAYM,MAAM,UAAUC,KAAK,QAAQC,UAAW,cAACQ,GAAA,EAAD,IAA3F,yBA/BmChI,CAAA,QAAD,0ECCnC,SAASiI,KACd,IAAMzF,EAAUC,cAEVyF,EAAcC,cAEdvK,EAAgBoB,GAAe,SAACf,GAAD,OACnCA,EAAML,MAAMgB,QAAO,SAACR,GAAD,OAAgBA,EAAKK,KAAOyJ,EAAYE,aAS7D,OAAO,mCAAoB,IAAjBxK,EAAM+B,OAAe,cAACmI,GAAD,CAAmB1J,KAAMR,EAAM,GAAImK,OANnD,WACQ,IAAjBnK,EAAM+B,QACR6C,EAAQwB,KAAR,sBAA4BpG,EAAM,GAAGa,QAI8C,O,2BCnB5E4J,GAAiBtI,YAAUC,aAcxC,SAAmBC,GACjB,IAAMoB,EAAUpB,EAAMoB,SAAY,aAElC,OACE,cAACiH,GAAA,EAAD,CAAK3B,UAAW1G,EAAM0G,UAAWW,MAAM,UAAU,aAAW,MAAMjG,QAASA,EAA3E,SACE,cAACkH,GAAA,EAAD,QAnBkCvI,CAAA,QAAD,yGAG3B,SAACC,GAAD,OAAoD,GAA0B,IAApBA,EAAM3B,OAAS,OCE9E,SAASkK,KACd,IAAMhG,EAAUC,cAEVyF,EAAcC,cAEdvK,EAAgBoB,GAAe,SAACf,GAAD,OACnCA,EAAML,MAAMgB,QAAO,SAACR,GAAD,OAAgBA,EAAKK,KAAOyJ,EAAYE,aAGvDvE,EAAWC,cAUjB,OACE,qCACE,2CACkB,IAAjBlG,EAAM+B,OAAe,cAACsF,GAAD,CAAmBU,OAX9B,SAACvH,GACdyF,EbsBmB,SAACzF,GACtB,IAAMC,EAA4B,CAChCQ,KAAMxB,EACNe,KAAMA,GAGR,OAAO,SAACyF,EAAgCI,GACtCJ,EAASxF,GACT,IAAMK,EAAWuF,IACjBzG,aAAa0G,QAAQ,QAASxG,KAAKyG,UAAUzF,Ka/BpC+J,CAAQrK,KAU0C4H,SAP5C,WACfxD,EAAQwB,KAAK,MAMkE5F,KAAMR,EAAM,KAAS,QCrBjG,SAAS8K,KACd,OA6BsBC,EA5BpB,cAACC,EAAA,EAAD,CAAWC,SAAU,KAArB,SACE,eAAC,IAAD,CAAeC,SAAUC,iBAAzB,UACE,cAAC,IAAD,CAAczB,MAAM,UAAU0B,UAAWC,IAAMC,GAAI,IAAnD,SACE,6CAEF,cAAC,IAAD,CAAMA,GAAG,UAAT,SACE,cAACb,GAAD,MAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,KAAK,UAAZ,SACE,cAACvB,GAAD,MAEF,cAAC,IAAD,CAAOuB,KAAK,sBAAZ,SACE,cAACX,GAAD,MAEF,cAAC,IAAD,CAAOW,KAAK,sBAAZ,SACE,cAAClB,GAAD,MAEF,cAAC,IAAD,CAAOkB,KAAK,IAAZ,SACE,cAAC/G,EAAD,cAUR,eAAC,aAAD,WACE,cAACgH,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,cAAC,IAAD,CAAUxL,MAAOA,EAAjB,SAAyB6K,SALjC,IAAwBA,ECvCjB,IAAyBY,GCIhCC,IAASC,OAAO,cAACf,GAAD,IAAStC,SAASsD,eAAe,SDH3CH,IACF,8BAAqBI,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOL,IACPM,EAAON,IACPO,EAAOP,IACPQ,EAAOR,IACPS,EAAQT,S","file":"static/js/main.a67266fb.chunk.js","sourcesContent":["import { Dispatch } from '@reduxjs/toolkit'\n\nexport interface Dump {\n  id: string\n  timestamp: number\n  summary: string\n  description: string\n  tags: string[]\n}\n\ninterface DumpAction {\n  type: string\n  dump: Dump\n}\n\nconst DumpActionType = {\n  ADD_DUMP: 'ADD_DUMP',\n  SET_DUMP: 'SET_DUMP',\n  REMOVE_DUMP: 'REMOVE_DUMP',\n}\n\nconst loadInitialState = (): Dump[] => {\n  const value = localStorage.getItem('dumps')\n  if (value === null) {\n    return []\n  }\n  return JSON.parse(value).dumps\n}\n\nconst initialState = loadInitialState()\n\nexport const addDump = (dump: Dump) => {\n  const addDumpAction: DumpAction = {\n    type: DumpActionType.ADD_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<DumpAction>, getState: () => Dump[]) => {\n    dispatch(addDumpAction)\n    const newState = getState()\n    localStorage.setItem('dumps', JSON.stringify(newState))\n  }\n}\n\nexport const setDump = (dump: Dump) => {\n  const setDumpAction: DumpAction = {\n    type: DumpActionType.SET_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<DumpAction>, getState: () => Dump[]) => {\n    dispatch(setDumpAction)\n    const newState = getState()\n    localStorage.setItem('dumps', JSON.stringify(newState))\n  }\n}\n\nexport const removeDump = (dump: Dump) => {\n  const removeDumpAction: DumpAction = {\n    type: DumpActionType.REMOVE_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<DumpAction>, getState: () => Dump[]) => {\n    dispatch(removeDumpAction)\n    const newState = getState()\n    localStorage.setItem('dumps', JSON.stringify(newState))\n  }\n}\n\nexport const dumpReducer = (state: Dump[] = initialState, action: DumpAction): Dump[] => {\n  const addDumpAction = (state: Dump[], dump: Dump) => {\n    return [...state, dump]\n  }\n\n  const setDumpAction = (state: Dump[], dump: Dump) => {\n    const index = state.findIndex((d: Dump) => d.id === dump.id)\n    if (index < 0) {\n      return state\n    }\n\n    const newState = [...state]\n    newState[index] = action.dump\n    return newState\n  }\n\n  const removeDumpAction = (state: Dump[], dump: Dump) => {\n    return state.filter((d: Dump) => d.id !== dump.id)\n  }\n\n  switch (action.type) {\n    case DumpActionType.ADD_DUMP:\n      return addDumpAction(state, action.dump)\n    case DumpActionType.SET_DUMP:\n      return setDumpAction(state, action.dump)\n    case DumpActionType.REMOVE_DUMP:\n      return removeDumpAction(state, action.dump)\n  }\n  return state\n}\n","import { applyMiddleware, combineReducers, createStore } from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport { dumpReducer } from './dumps'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nexport const store = createStore(\n  combineReducers({\n    dumps: dumpReducer,\n  }),\n  applyMiddleware(thunk)\n)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n","export type SearchHash = string[]\n\nexport function createSearchHash(...values: string[]): SearchHash {\n  type StringSet = { [value: string]: boolean }\n\n  return Object.keys(\n    values\n      .map((value: string) => value.replace(\"'\", ''))\n      .map((value: string) => value.toLowerCase())\n      .flatMap((value: string) => value.split(/[^a-z0-9]/))\n      .filter((value: string) => value.length > 0)\n      .reduce((set: StringSet, value: string) => {\n        set[value] = true\n        return set\n      }, {})\n  )\n}\n\nexport function scoreSearchResult(content: SearchHash, keywords: SearchHash): number {\n  const searchableContent = content.join(';')\n  return keywords.filter((kw: string) => searchableContent.includes(kw)).length\n}\n","import {\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  withTheme,\n} from '@material-ui/core'\nimport React, { ChangeEvent } from 'react'\nimport { Dump } from '../store/dumps'\nimport styled from 'styled-components'\nimport { Delete as DeleteIcon, Search as SearchIcon } from '@material-ui/icons'\n\nexport const SearchDumpsComponent = withTheme(styled(Component)``)\n\ninterface SearchProps {\n  dumps: Dump[]\n  onSearchFilterChange: (filter: string) => void\n  onDumpSelection: (dump: Dump) => void\n  onDumpRemoval: (dump: Dump) => void\n}\n\nfunction Component(props: SearchProps) {\n  const onSearchFilterChange = (event: ChangeEvent<HTMLInputElement>) => {\n    props.onSearchFilterChange(event.target.value)\n  }\n\n  const adornment = (\n    <InputAdornment position=\"end\">\n      <SearchIcon />\n    </InputAdornment>\n  )\n\n  const searchForm = (\n    <FormControl>\n      <InputLabel htmlFor=\"search\">Search</InputLabel>\n      <Input id=\"search\" autoFocus onChange={onSearchFilterChange} endAdornment={adornment} autoComplete=\"off\" />\n    </FormControl>\n  )\n\n  const listItems = props.dumps.map((dump: Dump) => (\n    <ListItem key={dump.id} button onClick={() => props.onDumpSelection(dump)}>\n      <ListItemText primary={dump.summary} secondary={new Date(dump.timestamp).toLocaleString()} />\n      <ListItemSecondaryAction onClick={() => props.onDumpRemoval(dump)}>\n        <IconButton edge=\"end\" aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ))\n\n  return (\n    <>\n      {searchForm}\n      {props.dumps.length > 0 ? <List>{listItems}</List> : null}\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { RootState, useAppSelector } from '../store/store'\nimport { Dump, removeDump } from '../store/dumps'\nimport { createSearchHash, scoreSearchResult } from '../services/search-service'\nimport { SearchDumpsComponent } from '../components/search-dumps-component'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\ninterface SearchState {\n  filter: string\n  selected: Dump | null\n}\n\ntype SetSearchState = React.Dispatch<React.SetStateAction<SearchState>>\n\nexport function SearchDumpsView() {\n  const initialState: SearchState = {\n    filter: '',\n    selected: null,\n  }\n\n  const [state, setState]: [SearchState, SetSearchState] = useState(initialState)\n\n  const history = useHistory<string>()\n\n  const dumps = useAppSelector((globalState: RootState): Dump[] => {\n    const scores = globalState.dumps.map((dump: Dump) => scoreDump(dump, state.filter))\n    return filterDumps(globalState.dumps, scores)\n  })\n\n  const dispatch = useDispatch<any>()\n\n  const onSearchFilterChange = (filter: string) => {\n    setState((prevState) => ({ ...prevState, filter }))\n  }\n\n  const onDumpSelection = (dump: Dump) => {\n    history.push(`/show/dumps/${dump.id}`)\n  }\n\n  const onDumpRemoval = (dump: Dump) => {\n    dispatch(removeDump(dump))\n  }\n\n  return (\n    <>\n      <h2>Find dumps</h2>\n      <SearchDumpsComponent\n        dumps={dumps}\n        onSearchFilterChange={onSearchFilterChange}\n        onDumpSelection={onDumpSelection}\n        onDumpRemoval={onDumpRemoval}\n      />\n    </>\n  )\n}\n\nfunction scoreDump(dump: Dump, filter: string): number {\n  const searchableDump = createSearchHash(dump.summary, dump.description, ...dump.tags)\n  const searchableFilter = createSearchHash(filter)\n  return scoreSearchResult(searchableDump, searchableFilter)\n}\n\nfunction filterDumps(dumps: Dump[], scores: number[]): Dump[] {\n  const maxScore = Math.max(...scores)\n  if (maxScore === 0) {\n    return []\n  }\n\n  const maxIndexes = scores\n    .map((score: number, index: number) => (score === maxScore ? index : -1))\n    .filter((index: number) => index >= 0)\n  return maxIndexes.map((index: number) => dumps[index])\n}\n","interface EventHandler {\n  matcher: (event: KeyboardEvent) => boolean\n  action: () => void\n}\n\nfunction isEditEvent(event: KeyboardEvent): boolean {\n  return event.key === 'e'\n}\n\nfunction isSaveEvent(event: KeyboardEvent): boolean {\n  return event.ctrlKey && event.key === 's'\n}\n\nfunction isCancelEvent(event: KeyboardEvent): boolean {\n  return event.key === 'Escape'\n}\n\nexport class EventHandlerBuilder {\n  constructor(private handlers: EventHandler[] = []) {}\n\n  onEdit(action: () => void): EventHandlerBuilder {\n    this.handlers.push({\n      matcher: isEditEvent,\n      action: action,\n    })\n    return this\n  }\n\n  onSave(action: () => void): EventHandlerBuilder {\n    this.handlers.push({\n      matcher: isSaveEvent,\n      action: action,\n    })\n    return this\n  }\n\n  onCancel(action: () => void): EventHandlerBuilder {\n    this.handlers.push({\n      matcher: isCancelEvent,\n      action: action,\n    })\n    return this\n  }\n\n  build(): (event: KeyboardEvent) => void {\n    return (event: KeyboardEvent) => {\n      const handler: EventHandler[] = this.handlers.filter((h: EventHandler) => h.matcher(event))\n      if (handler.length === 1) {\n        handler[0].action()\n        event.preventDefault()\n      }\n    }\n  }\n}\n","import { Button, TextField, Theme, withTheme } from '@material-ui/core'\nimport styled, { ThemeProps } from 'styled-components'\nimport React, { ChangeEvent, FormEvent, useEffect, useState } from 'react'\nimport { Dump } from '../store/dumps'\nimport { isEmpty } from '../validators/string-validators'\nimport { createDump } from '../services/create-service'\nimport { Save as SaveIcon } from '@material-ui/icons'\nimport { EventHandlerBuilder } from './key-event-handler'\n\nexport const EditDumpComponent = withTheme(styled(Component)`\n  div {\n    width: 100%;\n  }\n\n  > div {\n    margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n  }\n\n  > div:last-child {\n    text-align: right;\n  }\n`)\n\ninterface EditDumpProps {\n  className: string\n  dump?: Dump\n  onSave: (dump: Dump) => void\n  onCancel: () => void\n}\n\ninterface DumpFieldState {\n  value: string | null\n  hasError: boolean\n  error: string | null\n}\n\ninterface DumpState {\n  currentDump: Dump | null\n  summary: DumpFieldState\n  description: DumpFieldState\n}\n\ntype SetDumpState = React.Dispatch<React.SetStateAction<DumpState>>\n\nfunction Component(props: EditDumpProps) {\n  const initialState: DumpState = {\n    currentDump: props.dump || null,\n    summary: {\n      value: props.dump?.summary || null,\n      hasError: false,\n      error: null,\n    },\n    description: {\n      value: props.dump?.description || null,\n      hasError: false,\n      error: null,\n    },\n  }\n\n  const [state, setState]: [DumpState, SetDumpState] = useState(initialState)\n  const [saveEnabled, setSaveEnabled]: [boolean, React.Dispatch<React.SetStateAction<boolean>>] = useState(\n    false as boolean\n  )\n\n  const onFieldChange = (field: keyof DumpState, value: string) => {\n    const hasError = isEmpty(value)\n    const error = hasError ? 'Field must not be empty' : null\n    setState((prevState: DumpState) => ({\n      ...prevState,\n      [field]: { value, hasError, error },\n    }))\n  }\n\n  const onSave = () => {\n    const id = state.currentDump?.id || null\n    const summary = state.summary?.value || ''\n    const description = state.description?.value || ''\n\n    if (saveEnabled) {\n      const dump = createDump(id, summary, description)\n      props.onSave(dump)\n      setState((prevState: DumpState) => ({\n        ...prevState,\n        summary: { ...prevState.summary, value: dump.summary },\n        description: { ...prevState.description, value: dump.description },\n        currentDump: dump,\n      }))\n    }\n  }\n\n  const onCancel = () => {\n    props.onCancel()\n  }\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n  }\n\n  const eventHandler = new EventHandlerBuilder().onSave(onSave).onCancel(onCancel).build()\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    eventHandler(event)\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown)\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n    }\n  })\n\n  useEffect(() => {\n    const validSummary = state.summary.value !== null && !state.summary.hasError\n    const validDescription = state.description.value !== null && !state.description.hasError\n    const summaryChanged = state.summary.value?.trim() !== state.currentDump?.summary\n    const descriptionChanged = state.description.value !== state.currentDump?.description\n    setSaveEnabled(validSummary && validDescription && (summaryChanged || descriptionChanged))\n  }, [state])\n\n  return (\n    <>\n      <form className={props.className} noValidate autoComplete=\"off\" onSubmit={onSubmit}>\n        <div>\n          <TextField\n            id=\"summary\"\n            label=\"Summary\"\n            variant=\"outlined\"\n            value={state.summary.value || ''}\n            autoFocus\n            onChange={(event: ChangeEvent<HTMLInputElement>) => onFieldChange('summary', event.target.value)}\n            error={state.summary.hasError}\n            helperText={state.summary.error}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            variant=\"outlined\"\n            value={state.description.value || ''}\n            multiline\n            rows={12}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => onFieldChange('description', event.target.value)}\n            error={state.description.hasError}\n            helperText={state.description.error}\n          />\n        </div>\n        <div>\n          <Button\n            disabled={!saveEnabled}\n            onClick={onSave}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<SaveIcon />}\n          >\n            Save\n          </Button>\n        </div>\n      </form>\n    </>\n  )\n}\n","export function isEmpty(value: string): boolean {\n  return value.trim().length === 0\n}\n","import { Dump } from '../store/dumps'\nimport { v4 as uuid4 } from 'uuid'\n\nexport function createDump(id: string | null, summary: string, description: string): Dump {\n  return {\n    id: id || uuid4(),\n    timestamp: Date.now(),\n    summary: summary.trim(),\n    description: description,\n    tags: [],\n  }\n}\n","import { EditDumpComponent } from '../components/edit-dump-component'\nimport { addDump, Dump } from '../store/dumps'\nimport { useHistory } from 'react-router-dom'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport function CreateDumpView() {\n  const history = useHistory<string>()\n\n  const dispatch = useDispatch<any>()\n\n  const onSave = (dump: Dump) => {\n    dispatch(addDump(dump))\n    history.push(`/edit/dumps/${dump.id}`)\n  }\n\n  const onCancel = () => {\n    history.push('/')\n  }\n\n  return (\n    <>\n      <h2>Create new dump</h2>\n      <EditDumpComponent onSave={onSave} onCancel={onCancel} />\n    </>\n  )\n}\n","import { Button, withTheme } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { Dump } from '../store/dumps'\nimport React, { useEffect } from 'react'\nimport { Edit as EditIcon } from '@material-ui/icons'\nimport { EventHandlerBuilder } from './key-event-handler'\nimport Markdown from 'react-markdown'\n\nexport const ShowDumpComponent = withTheme(styled(Component)`\n  > div:last-child {\n    text-align: right;\n  }\n`)\n\ninterface DumpProps {\n  className: string\n  dump: Dump\n  onEdit: () => void\n}\n\nfunction Component(props: DumpProps) {\n  const eventHandler = new EventHandlerBuilder().onEdit(props.onEdit).build()\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    eventHandler(event)\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown)\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n    }\n  })\n\n  return (\n    <div className={props.className}>\n      <h2>{props.dump.summary}</h2>\n      <Markdown>{props.dump.description}</Markdown>\n      <div>\n        <Button onClick={props.onEdit} variant=\"contained\" color=\"primary\" size=\"large\" startIcon={<EditIcon />}>\n          Edit\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import { useHistory, useParams } from 'react-router-dom'\nimport { RootState, useAppSelector } from '../store/store'\nimport { Dump } from '../store/dumps'\nimport { ShowDumpComponent } from '../components/show-dump-component'\n\nexport interface ShowDumpRouteParams {\n  dumpId: string\n}\n\nexport function ShowDumpView() {\n  const history = useHistory<string>()\n\n  const routeParams = useParams<ShowDumpRouteParams>()\n\n  const dumps: Dump[] = useAppSelector((state: RootState) =>\n    state.dumps.filter((dump: Dump) => dump.id === routeParams.dumpId)\n  )\n\n  const onEdit = () => {\n    if (dumps.length === 1) {\n      history.push(`/edit/dumps/${dumps[0].id}`)\n    }\n  }\n\n  return <>{dumps.length === 1 ? <ShowDumpComponent dump={dumps[0]} onEdit={onEdit} /> : null}</>\n}\n","import { Fab, Theme, withTheme } from '@material-ui/core'\nimport { Add as AddIcon } from '@material-ui/icons'\nimport React from 'react'\nimport styled, { ThemeProps } from 'styled-components'\n\nexport const FloatingButton = withTheme(styled(Component)`\n  position: fixed;\n  top: auto;\n  bottom: ${(props: FloatingButtonProps & ThemeProps<Theme>) => 30 + (props.index || 0) * 70}px;\n  left: auto;\n  right: 30px;\n`)\n\ninterface FloatingButtonProps {\n  className: string\n  index?: number\n  onClick?: () => void\n}\n\nfunction Component(props: FloatingButtonProps) {\n  const onClick = props.onClick || (() => undefined)\n\n  return (\n    <Fab className={props.className} color=\"primary\" aria-label=\"add\" onClick={onClick}>\n      <AddIcon />\n    </Fab>\n  )\n}\n","import { EditDumpComponent } from '../components/edit-dump-component'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { RootState, useAppSelector } from '../store/store'\nimport { Dump, setDump } from '../store/dumps'\nimport { useDispatch } from 'react-redux'\n\nexport interface EditDumpRouteParams {\n  dumpId: string\n}\n\nexport function EditDumpView() {\n  const history = useHistory<string>()\n\n  const routeParams = useParams<EditDumpRouteParams>()\n\n  const dumps: Dump[] = useAppSelector((state: RootState) =>\n    state.dumps.filter((dump: Dump) => dump.id === routeParams.dumpId)\n  )\n\n  const dispatch = useDispatch<any>()\n\n  const onSave = (dump: Dump) => {\n    dispatch(setDump(dump))\n  }\n\n  const onCancel = () => {\n    history.push('/')\n  }\n\n  return (\n    <>\n      <h2>Edit Dump</h2>\n      {dumps.length === 1 ? <EditDumpComponent onSave={onSave} onCancel={onCancel} dump={dumps[0]} /> : null}\n    </>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\nimport { SearchDumpsView } from './views/search-dumps-view'\nimport { Container, CssBaseline, Link as MaterialLink, StylesProvider } from '@material-ui/core'\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\nimport { CreateDumpView } from './views/create-dump-view'\nimport { ShowDumpView } from './views/show-dump-view'\nimport { FloatingButton } from './components/floating-button'\nimport { EditDumpView } from './views/edit-dump-view'\n\nexport function App() {\n  return withAppContext(\n    <Container maxWidth={'sm'}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <MaterialLink color=\"inherit\" component={Link} to={'/'}>\n          <h1>Braindump</h1>\n        </MaterialLink>\n        <Link to=\"/create\">\n          <FloatingButton />\n        </Link>\n\n        <Switch>\n          <Route path=\"/create\">\n            <CreateDumpView />\n          </Route>\n          <Route path=\"/edit/dumps/:dumpId\">\n            <EditDumpView />\n          </Route>\n          <Route path=\"/show/dumps/:dumpId\">\n            <ShowDumpView />\n          </Route>\n          <Route path=\"/\">\n            <SearchDumpsView />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </Container>\n  )\n}\n\nfunction withAppContext(element: JSX.Element): JSX.Element {\n  return (\n    <StrictMode>\n      <CssBaseline />\n      <StylesProvider injectFirst>\n        <Provider store={store}>{element}</Provider>\n      </StylesProvider>\n    </StrictMode>\n  )\n}\n","import { ReportHandler } from 'web-vitals'\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport { reportWebVitals } from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}