{"version":3,"sources":["services/dump-service.ts","store/dump-store.ts","store/store.ts","components/header/action-button.tsx","components/dump-search-filter.tsx","components/dump-search-results.tsx","components/header/app-bar.tsx","components/header/menu-button.tsx","services/import-export-service.ts","components/floating-button.tsx","hooks/navigation-hook.ts","components/pages/page-content.tsx","services/search-service.ts","hooks/dump-selector-hooks.ts","components/pages/dump-search-page.tsx","validators/string-validators.ts","components/input/parentheses-enhancer.ts","components/input/advanced-input.tsx","components/dump-editor.tsx","services/create-service.ts","hooks/shortcut-hooks.ts","components/dump-details-content.tsx","components/dump-details.tsx","components/pages/editor-base-page.tsx","components/pages/dump-creator-page.tsx","components/pages/dump-details-page.tsx","components/pages/dump-editor-page.tsx","App.tsx","hooks/editor-hook.ts","reportWebVitals.ts","index.tsx","global-styles.ts"],"names":["LocalStorageKey","postDumps","dumps","data","JSON","stringify","window","localStorage","setItem","DumpActionType","mergeDumps","mergeDumpsAction","type","dispatch","getState","resolveMergeConflict","left","right","resolveSummaryMergeConflict","summary","mergedSummary","hasSummaryConflict","resolveDescriptionMergeConflict","description","mergedDescription","hasDescriptionConflict","prefix","tags","Map","forEach","tag","set","id","Array","from","keys","timestamp","Math","min","removeDump","dump","removeDumpAction","initialState","getItem","parse","error","findAllDumps","store","createStore","combineReducers","state","action","merge","get","values","addDumpAction","updateDumpAction","index","findIndex","d","newState","filter","dumpListAction","dumpAction","applyMiddleware","thunk","useAppSelector","useSelector","useAppDispatch","useDispatch","ActionButton","withTheme","styled","ActionButtonComponent","props","IconButton","className","disabled","onClick","edge","color","ArrowBack","Close","Delete","Edit","Save","selectIcon","DumpSearchFilter","useState","setState","onChange","FormControl","InputLabel","htmlFor","Input","value","event","target","endAdornment","InputAdornment","position","Search","autoFocus","autoComplete","defaultProps","DumpSearchResults","listItems","map","ListItem","button","onDumpSelection","ListItemText","primary","secondary","Date","toLocaleString","ListItemSecondaryAction","onDumpRemoval","List","AppBar","Toolbar","primaryButton","Typography","variant","title","secondaryButton","MenuButton","anchor","setAnchor","onMenuClose","menuItems","actions","menuAction","MenuItem","onAction","currentTarget","length","Menu","anchorEl","keepMounted","open","onClose","theme","spacing","importState","file","a","Promise","resolve","_importDumps","reader","FileReader","onload","fileData","ArrayBuffer","TextDecoder","decode","_decodeData","result","jsonData","readAsText","FloatingButton","FloatingButtonComponent","Fab","Add","useNavigation","history","useHistory","navigateTo","useCallback","route","location","pathname","push","replace","navigateHome","navigateToDetails","navigateToCreate","navigateToEdit","PageContent","PageContentComponent","Container","maxWidth","children","createSearchHash","Object","toLowerCase","flatMap","split","reduce","useDumpByIdSelector","dumpId","find","DumpSearchPage","navigation","selected","useDumpByFilterSelector","inputFile","useRef","onFileChoice","files","menuActions","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","exportState","current","ref","accept","style","display","prevState","globalState","scores","searchableDump","searchableFilter","content","keywords","searchableContent","join","kw","includes","scoreSearchResult","scoreDump","maxScore","max","score","filterDumps","isEmpty","trim","pairs","createPairs","invPairs","invMap","key","invertPairs","start","end","slice","AdvancedInput","unpack","useEffect","setSelectionRange","direction","TextField","inputRef","label","onKeyDown","oldState","enhancers","matcher","stopPropagation","preventDefault","helperText","multiline","selectionStart","selectionEnd","selectionDirection","pairAtCursor","suffix","ch","selection","DumpEditor","onFieldChange","field","hasError","uuid4","now","createDump","noValidate","onSubmit","useCancelShortcut","callback","useKeyListener","matches","addEventListener","removeEventListener","DumpDetailsContent","typography","h4","h5","h6","DumpDetails","Card","CardContent","EditorBase","useEditorState","selectedDump","editorState","onSave","saveDisabled","changedDump","ctrlKey","DumpCreatorPage","addDump","DumpDetailsPage","routeParams","useDumpParam","onEdit","DumpEditorPage","setDumpAction","updateDump","App","basename","process","path","validate","oldDump","newDump","validSummary","validDescription","summaryChanged","descriptionChanged","useParams","element","onPerfEntry","GlobalStyle","createGlobalStyle","ReactDOM","render","CssBaseline","StylesProvider","injectFirst","getElementById","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.02a4ac8f.chunk.js","sourcesContent":["import { Dump } from '../types/dump-types'\n\nconst LocalStorageKey = {\n  DUMPS: 'dumps',\n}\n\nexport function findAllDumps(): Dump[] {\n  const data: string | null = window.localStorage.getItem(LocalStorageKey.DUMPS)\n  if (data === null) {\n    return []\n  }\n\n  try {\n    const jsonData = JSON.parse(data)\n    return jsonData.dumps\n  } catch (error) {\n    return []\n  }\n}\n\nexport function postDumps(dumps: Dump[]): void {\n  const data = JSON.stringify(dumps)\n  window.localStorage.setItem(LocalStorageKey.DUMPS, data)\n}\n","import { Action, Dispatch } from '@reduxjs/toolkit'\nimport { Dump } from '../types/dump-types'\nimport { findAllDumps, postDumps } from '../services/dump-service'\n\nexport type GetState<T> = () => T\n\ninterface DumpListAction extends Action {\n  type: string\n  dumps: Dump[]\n}\n\ninterface DumpAction extends Action {\n  type: string\n  dump: Dump\n}\n\nconst DumpActionType = {\n  MERGE_DUMPS: 'MERGE_DUMPS',\n  ADD_DUMP: 'ADD_DUMP',\n  UPDATE_DUMP: 'UPDATE_DUMP',\n  REMOVE_DUMP: 'REMOVE_DUMP',\n}\n\nexport function mergeDumps(dumps: Dump[]): any {\n  const mergeDumpsAction: DumpListAction = {\n    type: DumpActionType.MERGE_DUMPS,\n    dumps: dumps,\n  }\n\n  return (dispatch: Dispatch<Action>, getState: GetState<Dump[]>): void => {\n    dispatch(mergeDumpsAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nfunction resolveMergeConflict(left: Dump | null, right: Dump): Dump {\n  if (left === null) {\n    return right\n  }\n\n  const [mergedSummary, hasSummaryConflict] = resolveSummaryMergeConflict(left.summary, right.summary)\n  const [mergedDescription, hasDescriptionConflict] = resolveDescriptionMergeConflict(\n    left.description,\n    right.description\n  )\n  const prefix = hasSummaryConflict || hasDescriptionConflict ? 'CONFLICT: ' : ''\n\n  const tags = new Map<string, boolean>()\n  left.tags.forEach((tag) => tags.set(tag, true))\n  right.tags.forEach((tag) => tags.set(tag, true))\n\n  return {\n    id: left.id,\n    summary: prefix + mergedSummary,\n    description: mergedDescription,\n    tags: Array.from(tags.keys()),\n    timestamp: Math.min(left.timestamp, right.timestamp),\n  }\n}\n\nfunction resolveSummaryMergeConflict(left: string, right: string): [string, boolean] {\n  if (left === right) {\n    return [left, false]\n  } else {\n    return [`${left} --- ${right}`, true]\n  }\n}\n\nfunction resolveDescriptionMergeConflict(left: string, right: string): [string, boolean] {\n  if (left === right) {\n    return [left, false]\n  } else {\n    return [`${left}\\n\\n---\\n\\n${right}`, true]\n  }\n}\n\nexport function addDump(dump: Dump): any {\n  const addDumpAction: DumpAction = {\n    type: DumpActionType.ADD_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<Action>, getState: GetState<Dump[]>): void => {\n    dispatch(addDumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nexport function updateDump(dump: Dump): any {\n  const setDumpAction: DumpAction = {\n    type: DumpActionType.UPDATE_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<DumpAction>, getState: GetState<Dump[]>): void => {\n    dispatch(setDumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nexport function removeDump(dump: Dump): any {\n  const removeDumpAction: DumpAction = {\n    type: DumpActionType.REMOVE_DUMP,\n    dump: dump,\n  }\n\n  return (dispatch: Dispatch<DumpAction>, getState: GetState<Dump[]>): void => {\n    dispatch(removeDumpAction)\n    const newState: Dump[] = getState()\n    postDumps(newState)\n  }\n}\n\nconst initialState = findAllDumps()\n\nexport function dumpReducer(state: Dump[] = initialState, action: Action): Dump[] {\n  function mergeDumpsAction(dumps: Dump[]): Dump[] {\n    const merge = new Map<string, Dump>()\n    state.forEach((dump) => merge.set(dump.id, dump))\n    dumps.forEach((dump) => merge.set(dump.id, resolveMergeConflict(merge.get(dump.id) || null, dump)))\n    return Array.from(merge.values())\n  }\n\n  function addDumpAction(state: Dump[], dump: Dump): Dump[] {\n    return [...state, dump]\n  }\n\n  function updateDumpAction(state: Dump[], dump: Dump): Dump[] {\n    const index = state.findIndex((d: Dump) => d.id === dump.id)\n    if (index < 0) {\n      return state\n    }\n\n    const newState = [...state]\n    newState[index] = dump\n    return newState\n  }\n\n  function removeDumpAction(state: Dump[], dump: Dump): Dump[] {\n    return state.filter((d: Dump) => d.id !== dump.id)\n  }\n\n  switch (action.type) {\n    case DumpActionType.MERGE_DUMPS: {\n      const dumpListAction = action as DumpListAction\n      return mergeDumpsAction(dumpListAction.dumps)\n    }\n    case DumpActionType.ADD_DUMP: {\n      const dumpAction = action as DumpAction\n      return addDumpAction(state, dumpAction.dump)\n    }\n    case DumpActionType.UPDATE_DUMP: {\n      const dumpAction = action as DumpAction\n      return updateDumpAction(state, dumpAction.dump)\n    }\n    case DumpActionType.REMOVE_DUMP:\n      const dumpAction = action as DumpAction\n      return removeDumpAction(state, dumpAction.dump)\n  }\n  return state\n}\n","import { applyMiddleware, combineReducers, createStore } from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk'\nimport { dumpReducer } from './dump-store'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nexport const store = createStore(\n  combineReducers({\n    dumps: dumpReducer,\n  }),\n  applyMiddleware(thunk)\n)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n","import { ArrowBack, Close, Delete, Edit, Save } from '@material-ui/icons'\nimport { IconButton, withTheme } from '@material-ui/core'\nimport React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport const ActionButton = withTheme(styled(ActionButtonComponent)``)\n\ninterface ActionButtonProps {\n  className: string\n  action: 'back' | 'cancel' | 'delete' | 'edit' | 'save'\n  disabled: boolean\n  onClick: () => void\n  edge: 'start' | 'end'\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  action: PropTypes.oneOf(['back', 'cancel', 'delete', 'edit', 'save']).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  edge: PropTypes.oneOf(['start', 'end']).isRequired,\n}\n\nfunction ActionButtonComponent(props: ActionButtonProps): JSX.Element {\n  function selectIcon(): JSX.Element | null {\n    switch (props.action) {\n      case 'back':\n        return <ArrowBack />\n      case 'cancel':\n        return <Close />\n      case 'delete':\n        return <Delete />\n      case 'edit':\n        return <Edit />\n      case 'save':\n        return <Save />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <IconButton\n      className={props.className}\n      disabled={props.disabled}\n      onClick={props.onClick}\n      edge={props.edge}\n      color=\"inherit\"\n      aria-label={props.action}\n    >\n      {selectIcon()}\n    </IconButton>\n  )\n}\n\nActionButtonComponent.propTypes = propTypes\n\nActionButtonComponent.defaultProps = {\n  disabled: false,\n  onClick: () => {},\n}\n","import { FormControl, Input, InputAdornment, InputLabel } from '@material-ui/core'\nimport React, { ChangeEvent, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Search as SearchIcon } from '@material-ui/icons'\nimport { ActionButton } from './header/action-button'\n\ninterface DumpSearchFilterProps {\n  onChange: (filter: string) => void\n}\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n\nexport function DumpSearchFilter(props: DumpSearchFilterProps): JSX.Element {\n  const [state, setState]: [string, React.Dispatch<string>] = useState('')\n\n  function onChange(filter: string): void {\n    props.onChange(filter)\n    setState(filter)\n  }\n\n  function selectAction(): JSX.Element {\n    if (state === '') {\n      return <SearchIcon />\n    } else {\n      return <ActionButton action={'cancel'} onClick={() => onChange('')} edge={'end'} />\n    }\n  }\n\n  return (\n    <FormControl>\n      <InputLabel htmlFor=\"search\">Search</InputLabel>\n      <Input\n        id=\"search\"\n        value={state}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value)}\n        endAdornment={<InputAdornment position=\"end\">{selectAction()}</InputAdornment>}\n        autoFocus\n        autoComplete=\"off\"\n      />\n    </FormControl>\n  )\n}\n\nDumpSearchFilter.propTypes = propTypes\n","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, withTheme } from '@material-ui/core'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Delete as DeleteIcon } from '@material-ui/icons'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport PropTypes from 'prop-types'\n\nexport const DumpSearchResults = withTheme(styled(DumpSearchComponent)``)\n\ninterface SearchProps {\n  dumps: Dump[]\n  onDumpSelection: (dump: Dump) => void\n  onDumpRemoval: (dump: Dump) => void\n}\n\nconst propTypes = {\n  dumps: PropTypes.arrayOf(PropTypes.shape(dumpShape).isRequired).isRequired,\n  onDumpSelection: PropTypes.func.isRequired,\n  onDumpRemoval: PropTypes.func.isRequired,\n}\n\nfunction DumpSearchComponent(props: SearchProps) {\n  const listItems = props.dumps.map((dump: Dump) => (\n    <ListItem key={dump.id} button onClick={() => props.onDumpSelection(dump)}>\n      <ListItemText primary={dump.summary} secondary={new Date(dump.timestamp).toLocaleString()} />\n      <ListItemSecondaryAction onClick={() => props.onDumpRemoval(dump)}>\n        <IconButton edge=\"end\" aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ))\n\n  return <List>{listItems}</List>\n}\n\nDumpSearchComponent.propTypes = propTypes\n","import { AppBar as ReactAppBar, Toolbar, Typography, withTheme } from '@material-ui/core'\nimport styled from 'styled-components'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AppBar = withTheme(styled(AppBarComponent)`\n  flex-grow: 1;\n\n  & > div > h6 {\n    flex-grow: 1;\n  }\n`)\n\ninterface AppBarProps {\n  className: string\n  title: string\n  primaryButton: JSX.Element | null\n  secondaryButton: JSX.Element | null\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  primaryButton: PropTypes.node,\n  secondaryButton: PropTypes.node,\n}\n\nfunction AppBarComponent(props: AppBarProps): JSX.Element {\n  return (\n    <ReactAppBar className={props.className} position=\"sticky\">\n      <Toolbar>\n        {props.primaryButton}\n        <Typography variant=\"h6\">{props.title}</Typography>\n        {props.secondaryButton}\n      </Toolbar>\n    </ReactAppBar>\n  )\n}\n\nAppBarComponent.propTypes = propTypes\n","import { IconButton, Menu, MenuItem, Theme, withTheme } from '@material-ui/core'\nimport { Menu as MenuIcon } from '@material-ui/icons'\nimport React, { MouseEvent, useState } from 'react'\nimport { MenuAction, menuActionShape } from '../../types/menu-action-types'\nimport styled, { ThemeProps } from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport const MenuButton = withTheme(styled(MenuButtonComponent)`\n  button {\n    margin-right: ${(props: ThemeProps<Theme>) => props.theme.spacing(2)};\n  }\n`)\n\ninterface MenuButtonProps {\n  className: string\n  actions: MenuAction[]\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  actions: PropTypes.arrayOf(PropTypes.shape(menuActionShape).isRequired).isRequired,\n}\n\nfunction MenuButtonComponent(props: MenuButtonProps) {\n  const [anchor, setAnchor] = useState<HTMLElement | null>(null)\n\n  const onMenuOpen = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchor(event.currentTarget)\n  }\n\n  const onMenuClose = () => {\n    setAnchor(null)\n  }\n\n  const onAction = (action: () => void) => {\n    action()\n    onMenuClose()\n  }\n\n  const menuItems = props.actions.map((menuAction: MenuAction, index: number) => (\n    <MenuItem key={`menu-item-${index}`} onClick={() => onAction(menuAction.action)}>\n      {menuAction.title}\n    </MenuItem>\n  ))\n\n  return (\n    <div className={props.className}>\n      <IconButton onClick={onMenuOpen} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n\n      {menuItems.length > 0 && (\n        <Menu id=\"app-menu\" anchorEl={anchor} keepMounted open={!!anchor} onClose={onMenuClose}>\n          {menuItems}\n        </Menu>\n      )}\n    </div>\n  )\n}\n\nMenuButtonComponent.propTypes = propTypes\n","import { RootState } from '../store/store'\n\nexport async function importState(file: File): Promise<RootState> {\n  return new Promise<RootState>((resolve) => _importDumps(file, resolve))\n}\n\nfunction _importDumps(file: File, resolve: (result: RootState) => void): void {\n  const reader = new FileReader()\n  reader.onload = () => {\n    const fileData: string = _decodeData(reader.result)\n    const jsonData: any = JSON.parse(fileData)\n    resolve(jsonData)\n  }\n\n  reader.readAsText(file)\n}\n\nfunction _decodeData(data: string | ArrayBuffer | null): string {\n  if (data === null) {\n    return ''\n  }\n  if (data instanceof ArrayBuffer) {\n    return new TextDecoder().decode(data)\n  }\n  return data\n}\n\nexport function exportState(state: RootState): void {\n  const jsonData: string = JSON.stringify(state)\n  const blob = new Blob([jsonData], { type: 'application/json' })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.download = 'braindump.json'\n  link.href = url\n  link.click()\n}\n","import { Fab, Theme, withTheme } from '@material-ui/core'\nimport { Add as AddIcon } from '@material-ui/icons'\nimport React from 'react'\nimport styled, { ThemeProps } from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport const FloatingButton = withTheme(styled(FloatingButtonComponent)`\n  position: fixed;\n  top: auto;\n  bottom: ${(props: FloatingButtonProps & ThemeProps<Theme>) => 30 + (props.index || 0) * 70}px;\n  left: auto;\n  right: 30px;\n`)\n\ninterface FloatingButtonProps {\n  className: string\n  index?: number\n  onClick: () => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n}\n\nfunction FloatingButtonComponent(props: FloatingButtonProps) {\n  return (\n    <Fab className={props.className} color=\"primary\" aria-label=\"add\" onClick={props.onClick}>\n      <AddIcon />\n    </Fab>\n  )\n}\n\nFloatingButtonComponent.propTypes = propTypes\n\nFloatingButtonComponent.defaultProps = {\n  onClick: () => {},\n}\n","import { useHistory } from 'react-router-dom'\nimport { Dump } from '../types/dump-types'\nimport { useCallback } from 'react'\n\nexport interface DumpRouteParam {\n  dumpId: string\n}\n\nexport interface Navigation {\n  navigateHome: () => void\n  navigateToDetails: (dump: Dump) => void\n  navigateToEdit: (dump: Dump) => void\n  navigateToCreate: () => void\n}\n\nexport function useNavigation(): Navigation {\n  const history = useHistory<string>()\n\n  const navigateTo = useCallback(\n    (route: string): void => {\n      const isHome = history.location.pathname === '/'\n      if (isHome) {\n        history.push(route)\n      } else {\n        history.replace(route)\n      }\n    },\n    [history]\n  )\n\n  const navigateHome = useCallback((): void => {\n    navigateTo('/')\n  }, [navigateTo])\n\n  const navigateToDetails = useCallback(\n    (dump: Dump): void => {\n      navigateTo(`/show/dumps/${dump.id}`)\n    },\n    [navigateTo]\n  )\n\n  const navigateToCreate = useCallback((): void => {\n    navigateTo('/create')\n  }, [navigateTo])\n\n  const navigateToEdit = useCallback(\n    (dump: Dump): void => {\n      navigateTo(`/edit/dumps/${dump.id}`)\n    },\n    [navigateTo]\n  )\n\n  return {\n    navigateHome,\n    navigateToDetails,\n    navigateToCreate,\n    navigateToEdit,\n  }\n}\n","import { Container, Theme, Typography, withTheme } from '@material-ui/core'\nimport styled, { ThemeProps } from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport const PageContent = withTheme(styled(PageContentComponent)`\n  margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(0, 0, 15)};\n\n  > h6 {\n    margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n  }\n`)\n\ninterface PageContentComponentProps {\n  className: string\n  title: string | null\n  children: JSX.Element[]\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  title: PropTypes.string,\n}\n\nfunction PageContentComponent(props: PageContentComponentProps): JSX.Element {\n  return (\n    <Container className={props.className} maxWidth={false}>\n      {props.title !== null && <Typography variant=\"h6\">{props.title}</Typography>}\n      {props.children}\n    </Container>\n  )\n}\n\nPageContentComponent.propTypes = propTypes\n\nPageContentComponent.defaultProps = {\n  title: null,\n}\n","export type SearchHash = string[]\n\nexport function createSearchHash(...values: string[]): SearchHash {\n  type StringSet = { [value: string]: boolean }\n\n  return Object.keys(\n    values\n      .map((value: string) => value.replace(\"'\", ''))\n      .map((value: string) => value.toLowerCase())\n      .flatMap((value: string) => value.split(/[^a-z0-9]/))\n      .filter((value: string) => value.length > 0)\n      .reduce((set: StringSet, value: string) => {\n        set[value] = true\n        return set\n      }, {})\n  )\n}\n\nexport function scoreSearchResult(content: SearchHash, keywords: SearchHash): number {\n  const searchableContent = content.join(';')\n  return keywords.filter((kw: string) => searchableContent.includes(kw)).length\n}\n","import { Dump } from '../types/dump-types'\nimport { RootState, useAppSelector } from '../store/store'\nimport { createSearchHash, scoreSearchResult } from '../services/search-service'\n\nexport function useDumpByIdSelector(dumpId?: string): Dump | null {\n  return useAppSelector((state: RootState) => state.dumps.find((dump: Dump) => dump.id === dumpId) || null)\n}\n\nexport function useDumpByFilterSelector(filter: string): Dump[] {\n  return useAppSelector((globalState: RootState): Dump[] => {\n    const scores = globalState.dumps.map((dump: Dump) => scoreDump(dump, filter))\n    return filterDumps(globalState.dumps, scores)\n  })\n}\n\nfunction scoreDump(dump: Dump, filter: string): number {\n  const searchableDump = createSearchHash(dump.summary, dump.description, ...dump.tags)\n  const searchableFilter = createSearchHash(filter)\n  return scoreSearchResult(searchableDump, searchableFilter)\n}\n\nfunction filterDumps(dumps: Dump[], scores: number[]): Dump[] {\n  const maxScore = Math.max(...scores)\n  if (maxScore === 0) {\n    return []\n  }\n\n  const maxIndexes = scores\n    .map((score: number, index: number) => (score === maxScore ? index : -1))\n    .filter((index: number) => index >= 0)\n  return maxIndexes.map((index: number) => dumps[index])\n}\n","import React, { ChangeEvent, useRef, useState } from 'react'\nimport { RootState, store, useAppDispatch } from '../../store/store'\nimport { removeDump, mergeDumps } from '../../store/dump-store'\nimport { DumpSearchFilter } from '../dump-search-filter'\nimport { DumpSearchResults } from '../dump-search-results'\nimport { Dump } from '../../types/dump-types'\nimport { AppBar } from '../header/app-bar'\nimport { MenuButton } from '../header/menu-button'\nimport { exportState, importState } from '../../services/import-export-service'\nimport { MenuAction } from '../../types/menu-action-types'\nimport { FloatingButton } from '../floating-button'\nimport { Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport PropTypes from 'prop-types'\nimport { PageContent } from './page-content'\nimport { useDumpByFilterSelector } from '../../hooks/dump-selector-hooks'\n\ninterface DumpSearchPageProps {\n  useDumpByFilterSelector: (filter: string) => Dump[]\n  useNavigation: () => Navigation\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useDumpByFilterSelector: PropTypes.func.isRequired,\n  useNavigation: PropTypes.func.isRequired,\n  useDispatch: PropTypes.func.isRequired,\n}\n\ninterface SearchState {\n  filter: string\n  selected: Dump | null\n}\n\ntype SetSearchState = React.Dispatch<React.SetStateAction<SearchState>>\n\nexport function DumpSearchPage(props: DumpSearchPageProps) {\n  const navigation = props.useNavigation()\n\n  const initialState: SearchState = {\n    filter: '',\n    selected: null,\n  }\n\n  const [state, setState]: [SearchState, SetSearchState] = useState(initialState)\n\n  const dumps = props.useDumpByFilterSelector(state.filter)\n\n  const dispatch = props.useDispatch()\n\n  const exportAction = () => {\n    const state: RootState = store.getState()\n    exportState(state)\n  }\n\n  const inputFile = useRef<HTMLInputElement | null>(null)\n\n  const importAction = () => {\n    inputFile.current?.click()\n  }\n\n  const onFileChoice = async (event: ChangeEvent<HTMLInputElement>) => {\n    const file: File | null = event.target.files?.[0] || null\n    if (file !== null) {\n      const state: RootState = await importState(file)\n      dispatch(mergeDumps(state.dumps))\n    }\n  }\n\n  const menuActions: MenuAction[] = [\n    { title: 'Export', action: exportAction },\n    { title: 'Import', action: importAction },\n  ]\n\n  const onSearchFilterChange = (filter: string) => {\n    setState((prevState) => ({ ...prevState, filter }))\n  }\n\n  const onDumpRemoval = (dump: Dump) => {\n    dispatch(removeDump(dump))\n  }\n\n  return (\n    <>\n      <AppBar title=\"Braindump\" primaryButton={<MenuButton actions={menuActions} />} />\n\n      <input\n        type=\"file\"\n        ref={inputFile}\n        accept={'application/json, .json'}\n        onChange={onFileChoice}\n        style={{ display: 'none' }}\n      />\n\n      <PageContent title=\"Find dumps\">\n        <DumpSearchFilter onChange={onSearchFilterChange} />\n        {dumps.length > 0 && (\n          <DumpSearchResults\n            dumps={dumps}\n            onDumpSelection={navigation.navigateToDetails}\n            onDumpRemoval={onDumpRemoval}\n          />\n        )}\n        <FloatingButton onClick={navigation.navigateToCreate} />\n      </PageContent>\n    </>\n  )\n}\n\nDumpSearchPage.propTypes = propTypes\n\nDumpSearchPage.defaultProps = {\n  useDumpByFilterSelector,\n  useNavigation,\n  useDispatch: useAppDispatch,\n}\n","export function isEmpty(value: string): boolean {\n  return value.trim().length === 0\n}\n","import { InputState } from './advanced-input-types'\n\nconst pairs = createPairs()\nconst invPairs = invertPairs(pairs)\n\nfunction createPairs(): Map<string, string> {\n  const map = new Map<string, string>()\n  map.set('(', ')')\n  map.set('[', ']')\n  map.set('{', '}')\n  map.set('<', '>')\n  map.set('\"', '\"')\n  map.set(\"'\", \"'\")\n  return map\n}\n\nfunction invertPairs(map: Map<string, string>): Map<string, string> {\n  const invMap = new Map<string, string>()\n  map.forEach((value, key) => invMap.set(value, key))\n  return invMap\n}\n\nexport function openParentheses(key: string, state: InputState): InputState | null {\n  const value = pairs.get(key) || null\n  if (value === null) {\n    return null\n  }\n\n  const [prefix, selection, suffix] = split(state.value, state.start, state.end)\n  return {\n    value: prefix + key + selection + value + suffix,\n    start: prefix.length + 1,\n    end: prefix.length + 1 + selection.length,\n    direction: state.direction,\n  }\n}\n\nexport function closeParentheses(key: string, state: InputState): InputState | null {\n  const ch = state.value[state.start]\n  if (key !== ch || state.start !== state.end) {\n    return null\n  }\n\n  const isClosing = !!invPairs.get(ch)\n  if (!isClosing) {\n    return null\n  }\n\n  return {\n    value: state.value,\n    start: state.start + 1,\n    end: state.end + 1,\n    direction: state.direction,\n  }\n}\n\nexport function removeParentheses(key: string, state: InputState): InputState | null {\n  if (key !== 'Backspace' || state.start !== state.end) {\n    return null\n  }\n\n  const [prefix, pairAtCursor, suffix] = split(state.value, state.start - 1, state.start + 1)\n  const isPair = !!pairs.get(pairAtCursor[0]) && !!invPairs.get(pairAtCursor[1])\n  if (!isPair) {\n    return null\n  }\n\n  return {\n    value: prefix + suffix,\n    start: prefix.length,\n    end: prefix.length,\n    direction: state.direction,\n  }\n}\n\nfunction split(value: string, start: number, end: number): [string, string, string] {\n  return [value.slice(0, start), value.slice(start, end), value.slice(end)]\n}\n","import React, { ChangeEvent, KeyboardEvent, useEffect, useRef, useState } from 'react'\nimport { TextField } from '@material-ui/core'\nimport { InputEnhancer, InputState } from './advanced-input-types'\nimport PropTypes from 'prop-types'\nimport { closeParentheses, openParentheses, removeParentheses } from './parentheses-enhancer'\n\ninterface AdvancedInputProps {\n  label: string\n  value: string\n  onChange: (value: string) => void\n  error: string | null\n  multiline: boolean\n  enhancers: InputEnhancer[]\n}\n\nconst propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  multiline: PropTypes.bool.isRequired,\n  enhancers: PropTypes.arrayOf(PropTypes.func.isRequired).isRequired,\n}\n\nexport function AdvancedInput(props: AdvancedInputProps): JSX.Element {\n  const ref = useRef<HTMLInputElement>()\n  const [state, setState]: [InputState, React.Dispatch<React.SetStateAction<InputState>>] = useState(\n    unpack({ value: props.value })\n  )\n\n  useEffect(() => {\n    ref.current?.setSelectionRange(state.start, state.end, state.direction)\n  }, [state])\n\n  function onKeyDown(event: KeyboardEvent<HTMLInputElement>): void {\n    const oldState = unpack(event.target)\n    const newState = props.enhancers.reduce(\n      (prevState: InputState | null, matcher: InputEnhancer) => prevState || matcher(event.key, oldState),\n      null\n    )\n\n    if (newState !== null) {\n      onChange(newState)\n      event.stopPropagation()\n      event.preventDefault()\n    }\n  }\n\n  function onChange(newState: InputState): void {\n    setState(newState)\n    props.onChange(newState.value)\n  }\n\n  return (\n    <TextField\n      inputRef={ref}\n      label={props.label}\n      value={state.value}\n      onKeyDown={onKeyDown}\n      onChange={(event: ChangeEvent<HTMLInputElement>) => onChange(unpack(event.target))}\n      error={!!props.error}\n      helperText={props.error || ''}\n      variant=\"outlined\"\n      multiline={props.multiline}\n    />\n  )\n}\n\nfunction unpack({ value, selectionStart, selectionEnd, selectionDirection }: any): InputState {\n  return {\n    value: value || '',\n    start: selectionStart || 0,\n    end: selectionEnd || 0,\n    direction: selectionDirection || 'none',\n  }\n}\n\nAdvancedInput.propTypes = propTypes\n\nAdvancedInput.defaultProps = {\n  label: '',\n  value: '',\n  onChange: () => {},\n  error: null,\n  multiline: false,\n  enhancers: [removeParentheses, closeParentheses, openParentheses],\n}\n","import { Theme, withTheme } from '@material-ui/core'\nimport styled, { ThemeProps } from 'styled-components'\nimport React, { FormEvent, useEffect, useState } from 'react'\nimport { isEmpty } from '../validators/string-validators'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport PropTypes from 'prop-types'\nimport { createDump } from '../services/create-service'\nimport { AdvancedInput } from './input/advanced-input'\n\nexport const DumpEditor = withTheme(styled(DumpEditorComponent)`\n  div {\n    width: 100%;\n  }\n\n  > div {\n    margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n  }\n\n  > div > div > div > TextArea {\n    font-family: monospace;\n  }\n`)\n\ninterface DumpEditorProps {\n  className: string\n  dump?: Dump\n  onChange: (dump: Dump) => void\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  dump: PropTypes.shape(dumpShape),\n  onChange: PropTypes.func.isRequired,\n}\n\ninterface DumpFieldState {\n  value: string | null\n  error: string | null\n}\n\ninterface EditorState {\n  summary: DumpFieldState\n  description: DumpFieldState\n}\n\ntype SetEditorState = React.Dispatch<React.SetStateAction<EditorState>>\n\nfunction DumpEditorComponent(props: DumpEditorProps) {\n  const { dump, onChange } = props\n\n  const initialState: EditorState = {\n    summary: {\n      value: props.dump?.summary || null,\n      error: null,\n    },\n    description: {\n      value: props.dump?.description || null,\n      error: null,\n    },\n  }\n\n  const [state, setState]: [EditorState, SetEditorState] = useState(initialState)\n\n  useEffect(() => {\n    const id = dump?.id || null\n    const summary = state.summary.value || ''\n    const description = state.description.value || ''\n    onChange(createDump(id, summary, description))\n  }, [state, dump?.id, onChange])\n\n  function onFieldChange(field: keyof EditorState, value: string): void {\n    const hasError = isEmpty(value)\n    const error = hasError ? 'Field must not be empty' : null\n    setState((prevState: EditorState) => ({\n      ...prevState,\n      [field]: { value, hasError, error },\n    }))\n  }\n\n  function onSubmit(event: FormEvent<HTMLFormElement>): void {\n    event.preventDefault()\n  }\n\n  return (\n    <form className={props.className} noValidate autoComplete=\"off\" onSubmit={onSubmit}>\n      <div>\n        <AdvancedInput\n          label=\"Summary\"\n          value={state.summary.value || ''}\n          onChange={(value: string) => onFieldChange('summary', value)}\n          error={state.summary.error}\n        />\n      </div>\n      <div>\n        <AdvancedInput\n          label=\"Description\"\n          value={state.description.value || ''}\n          onChange={(value: string) => onFieldChange('description', value)}\n          error={state.description.error}\n          multiline\n        />\n      </div>\n    </form>\n  )\n}\n\nDumpEditorComponent.propTypes = propTypes\n","import { v4 as uuid4 } from 'uuid'\nimport { Dump } from '../types/dump-types'\n\nexport function createDump(id: string | null, summary: string, description: string): Dump {\n  return {\n    id: id || uuid4(),\n    timestamp: Date.now(),\n    summary: summary.trim(),\n    description: description,\n    tags: [],\n  }\n}\n","import { useEffect } from 'react'\n\nexport function useEditShortcut(callback: () => void): void {\n  useKeyListener(isEditEvent, callback)\n\n  function isEditEvent(event: KeyboardEvent): boolean {\n    return event.key === 'e'\n  }\n}\n\nexport function useCancelShortcut(callback: () => void): void {\n  useKeyListener(isCancelEvent, callback)\n\n  function isCancelEvent(event: KeyboardEvent): boolean {\n    return event.key === 'Escape'\n  }\n}\n\nexport function useSaveShortcut(callback: () => void): void {\n  useKeyListener(isSaveEvent, callback)\n\n  function isSaveEvent(event: KeyboardEvent): boolean {\n    return event.ctrlKey && event.key === 's'\n  }\n}\n\nfunction useKeyListener(matches: (event: KeyboardEvent) => boolean, callback: () => void): void {\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown)\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n    }\n  })\n\n  function onKeyDown(event: KeyboardEvent): void {\n    if (matches(event)) {\n      callback()\n      event.preventDefault()\n    }\n  }\n}\n","import Markdown from 'react-markdown'\nimport React from 'react'\nimport styled, { ThemeProps } from 'styled-components'\nimport { Theme, withTheme } from '@material-ui/core'\n\nexport const DumpDetailsContent = withTheme(styled(DumpDetailsContentComponent)`\n  ${(props: ThemeProps<any>) => props.theme.typography};\n\n  h1 {\n    ${(props) => props.theme.typography.h4};\n  }\n\n  h2 {\n    ${(props: ThemeProps<any>) => props.theme.typography.h5};\n  }\n\n  h3,\n  h4,\n  h5,\n  h6 {\n    ${(props: ThemeProps<any>) => props.theme.typography.h6};\n  }\n\n  img {\n    max-width: 100%;\n    max-height: 50vh;\n  }\n\n  *:not(pre) > code,\n  pre {\n    border: solid thin #d3d3d3;\n    border-radius: 5px;\n    background-color: #efefef;\n  }\n\n  *:not(pre) > code {\n    padding: 3px;\n  }\n\n  pre {\n    padding: ${(props: ThemeProps<Theme>) => props.theme.spacing(1, 1, 1, 1)};\n  }\n`)\n\ninterface DumpDetailsContentProps {\n  className: string\n  content: string\n}\n\nfunction DumpDetailsContentComponent(props: DumpDetailsContentProps): JSX.Element {\n  return <Markdown className={props.className}>{props.content}</Markdown>\n}\n","import { Card, CardContent, Theme, Typography, withTheme } from '@material-ui/core'\nimport styled, { ThemeProps } from 'styled-components'\nimport React from 'react'\nimport { Dump, dumpShape } from '../types/dump-types'\nimport PropTypes from 'prop-types'\nimport { DumpDetailsContent } from './dump-details-content'\n\nexport const DumpDetails = withTheme(styled(DumpDetailsComponent)`\n  margin: ${(props: ThemeProps<Theme>) => props.theme.spacing(2, 0, 2)};\n`)\n\ninterface DumpDetailsProps {\n  className: string\n  dump: Dump\n}\n\nconst propTypes = {\n  className: PropTypes.string.isRequired,\n  dump: PropTypes.shape(dumpShape).isRequired,\n}\n\nfunction DumpDetailsComponent(props: DumpDetailsProps) {\n  return (\n    <Card className={props.className}>\n      <CardContent>\n        <Typography variant=\"h6\">{props.dump.summary}</Typography>\n        <DumpDetailsContent content={props.dump.description} />\n      </CardContent>\n    </Card>\n  )\n}\n\nDumpDetailsComponent.propTypes = propTypes\n","import { DumpEditor } from '../dump-editor'\nimport { FloatingButton } from '../floating-button'\nimport React from 'react'\nimport { AppBar } from '../header/app-bar'\nimport PropTypes from 'prop-types'\nimport { Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport { useCancelShortcut, useSaveShortcut } from '../../hooks/shortcut-hooks'\nimport { EditorAction, EditorState, useEditorState } from '../../hooks/editor-hook'\nimport { ActionButton } from '../header/action-button'\nimport { DumpDetails } from '../dump-details'\nimport { Dump, dumpShape } from '../../types/dump-types'\nimport { PageContent } from './page-content'\n\ninterface EditorBaseProps {\n  title: string\n  selectedDump?: Dump | null\n  onSave: (dump: Dump) => void\n\n  useNavigation: () => Navigation\n  useEditorState: (selectedDump: Dump | null) => [EditorState, EditorAction]\n}\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  selectedDump: PropTypes.shape(dumpShape),\n  onSave: PropTypes.func.isRequired,\n\n  useNavigation: PropTypes.func.isRequired,\n  useEditorState: PropTypes.func.isRequired,\n}\n\nexport function EditorBase(props: EditorBaseProps) {\n  const navigation = props.useNavigation()\n  const [editorState, onChange] = props.useEditorState(props?.selectedDump || null)\n\n  useCancelShortcut(navigation.navigateHome)\n  useSaveShortcut(onSave)\n\n  function onSave(): void {\n    if (!editorState.saveDisabled && editorState.changedDump !== null) {\n      props.onSave(editorState.changedDump)\n    }\n  }\n\n  return (\n    <>\n      <AppBar\n        title=\"Braindump\"\n        primaryButton={<ActionButton action=\"cancel\" onClick={navigation.navigateHome} edge=\"start\" />}\n        secondaryButton={<ActionButton action=\"save\" disabled={editorState.saveDisabled} onClick={onSave} edge=\"end\" />}\n      />\n\n      <PageContent title={props.title}>\n        <DumpEditor dump={editorState.selectedDump} onChange={onChange} />\n        {editorState.changedDump !== null && <DumpDetails dump={editorState.changedDump} />}\n        {editorState.selectedDump !== null && <FloatingButton onClick={navigation.navigateToCreate} />}\n      </PageContent>\n    </>\n  )\n}\n\nEditorBase.propTypes = propTypes\n\nEditorBase.defaultProps = {\n  useNavigation,\n  useEditorState,\n}\n","import { Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport { Dump } from '../../types/dump-types'\nimport { addDump } from '../../store/dump-store'\nimport React from 'react'\nimport { EditorBase } from './editor-base-page'\nimport PropTypes from 'prop-types'\nimport { useAppDispatch } from '../../store/store'\n\ninterface DumpCreatorPageProps {\n  useNavigation: () => Navigation\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useNavigation: PropTypes.func.isRequired,\n}\n\nexport function DumpCreatorPage(props: DumpCreatorPageProps) {\n  const navigation = props.useNavigation()\n  const dispatch = props.useDispatch()\n\n  function onSave(dump: Dump): void {\n    dispatch(addDump(dump))\n    navigation.navigateToEdit(dump)\n  }\n\n  return <EditorBase title=\"Create new dump\" onSave={onSave} />\n}\n\nDumpCreatorPage.propTypes = propTypes\n\nDumpCreatorPage.defaultProps = {\n  useNavigation,\n  useDispatch: useAppDispatch,\n}\n","import { useParams } from 'react-router-dom'\nimport { DumpDetails } from '../dump-details'\nimport { Dump } from '../../types/dump-types'\nimport PropTypes from 'prop-types'\nimport { AppBar } from '../header/app-bar'\nimport React from 'react'\nimport { FloatingButton } from '../floating-button'\nimport { DumpRouteParam, Navigation, useNavigation } from '../../hooks/navigation-hook'\nimport { useCancelShortcut, useEditShortcut } from '../../hooks/shortcut-hooks'\nimport { useDumpByIdSelector } from '../../hooks/dump-selector-hooks'\nimport { ActionButton } from '../header/action-button'\nimport { useDispatch } from 'react-redux'\nimport { removeDump } from '../../store/dump-store'\nimport { PageContent } from './page-content'\n\ninterface ShowDumpViewProps {\n  useDumpParam: () => DumpRouteParam\n  useNavigation: () => Navigation\n  useDumpByIdSelector: (dumpId?: string) => Dump | null\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useDumpParam: PropTypes.func.isRequired,\n  useNavigation: PropTypes.func.isRequired,\n  useDumpByIdSelector: PropTypes.func.isRequired,\n  useDispatch: PropTypes.func.isRequired,\n}\n\nexport function DumpDetailsPage(props: ShowDumpViewProps) {\n  const routeParams = props.useDumpParam()\n  const navigation = props.useNavigation()\n  const dump = props.useDumpByIdSelector(routeParams.dumpId)\n  const dispatch = props.useDispatch()\n\n  useCancelShortcut(navigation.navigateHome)\n  useEditShortcut(onEdit)\n\n  function onEdit(): void {\n    if (dump !== null) {\n      navigation.navigateToEdit(dump)\n    }\n  }\n\n  function onDelete(): void {\n    if (dump !== null) {\n      dispatch(removeDump(dump))\n      navigation.navigateHome()\n    }\n  }\n\n  return (\n    <>\n      <AppBar\n        title=\"Braindump\"\n        primaryButton={<ActionButton action=\"back\" onClick={navigation.navigateHome} edge=\"start\" />}\n        secondaryButton={\n          <>\n            <ActionButton action=\"edit\" disabled={dump === null} onClick={onEdit} edge=\"end\" />\n            <ActionButton action=\"delete\" disabled={dump === null} onClick={onDelete} edge=\"end\" />\n          </>\n        }\n      />\n\n      <PageContent>\n        {dump !== null && <DumpDetails dump={dump} />}\n        <FloatingButton onClick={navigation.navigateToCreate} />\n      </PageContent>\n    </>\n  )\n}\n\nDumpDetailsPage.propTypes = propTypes\n\nDumpDetailsPage.defaultProps = {\n  useDumpParam: () => useParams<DumpRouteParam>(),\n  useNavigation,\n  useDumpByIdSelector,\n  useDispatch: () => useDispatch<any>(),\n}\n","import { Dump } from '../../types/dump-types'\nimport { updateDump } from '../../store/dump-store'\nimport React from 'react'\nimport { EditorBase } from './editor-base-page'\nimport { DumpRouteParam } from '../../hooks/navigation-hook'\nimport PropTypes from 'prop-types'\nimport { useParams } from 'react-router-dom'\nimport { useDumpByIdSelector } from '../../hooks/dump-selector-hooks'\nimport { useAppDispatch } from '../../store/store'\n\ninterface DumpEditorPageProps {\n  useDumpParam: () => DumpRouteParam\n  useDumpByIdSelector: (routeParam?: string) => Dump | null\n  useDispatch: () => any\n}\n\nconst propTypes = {\n  useDumpParam: PropTypes.func.isRequired,\n  useDumpByIdSelector: PropTypes.func.isRequired,\n  useDispatch: PropTypes.func.isRequired,\n}\n\nexport function DumpEditorPage(props: DumpEditorPageProps) {\n  const routeParams = props.useDumpParam()\n  const selectedDump = props.useDumpByIdSelector(routeParams.dumpId)\n  const dispatch = props.useDispatch()\n\n  function onSave(dump: Dump): void {\n    dispatch(updateDump(dump))\n  }\n\n  return <EditorBase title=\"Edit dump\" selectedDump={selectedDump} onSave={onSave} />\n}\n\nDumpEditorPage.propTypes = propTypes\n\nDumpEditorPage.defaultProps = {\n  useDumpParam: () => useParams<DumpRouteParam>(),\n  useDumpByIdSelector,\n  useDispatch: useAppDispatch,\n}\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { DumpSearchPage } from './components/pages/dump-search-page'\nimport { DumpCreatorPage } from './components/pages/dump-creator-page'\nimport { DumpDetailsPage } from './components/pages/dump-details-page'\nimport { DumpEditorPage } from './components/pages/dump-editor-page'\n\nexport function App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/create\">\n          <DumpCreatorPage />\n        </Route>\n        <Route path=\"/edit/dumps/:dumpId\">\n          <DumpEditorPage />\n        </Route>\n        <Route path=\"/show/dumps/:dumpId\">\n          <DumpDetailsPage />\n        </Route>\n        <Route path=\"/\">\n          <DumpSearchPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n","import { Dump } from '../types/dump-types'\nimport { useCallback, useEffect, useState } from 'react'\nimport { isEmpty } from '../validators/string-validators'\n\nexport interface EditorState {\n  selectedDump: Dump | null\n  changedDump: Dump | null\n  saveDisabled: boolean\n}\n\nexport type EditorAction = (dump: Dump) => void\n\nexport function useEditorState(selectedDump: Dump | null): [EditorState, EditorAction] {\n  const [state, setState] = useState<EditorState>({\n    selectedDump,\n    changedDump: selectedDump,\n    saveDisabled: true,\n  })\n\n  useEffect(() => {\n    setState({ selectedDump, changedDump: selectedDump, saveDisabled: true })\n  }, [selectedDump])\n\n  const onChange = useCallback((dump: Dump): void => {\n    setState((prevState: EditorState) => ({\n      ...prevState,\n      changedDump: dump,\n      saveDisabled: !validate(prevState.selectedDump, dump),\n    }))\n  }, [])\n\n  function validate(oldDump: Dump | null, newDump: Dump): boolean {\n    const validSummary = !isEmpty(newDump.summary)\n    const validDescription = !isEmpty(newDump.description)\n    const summaryChanged = newDump.summary.trim() !== oldDump?.summary\n    const descriptionChanged = newDump.description !== oldDump?.description\n    return validSummary && validDescription && (summaryChanged || descriptionChanged)\n  }\n\n  return [state, onChange]\n}\n","import { ReportHandler } from 'web-vitals'\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport { reportWebVitals } from './reportWebVitals'\nimport { CssBaseline, StylesProvider } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport { GlobalStyle } from './global-styles'\n\nReactDOM.render(withAppContext(<App />), document.getElementById('root'))\n\nfunction withAppContext(element: JSX.Element): JSX.Element {\n  return (\n    <StrictMode>\n      <CssBaseline />\n      <StylesProvider injectFirst>\n        <GlobalStyle />\n        <Provider store={store}>{element}</Provider>\n      </StylesProvider>\n    </StrictMode>\n  )\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle``\n"],"sourceRoot":""}